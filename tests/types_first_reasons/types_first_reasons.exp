Error ---------------------------------------------------------------------------- destructured_param_default_dep.js:2:3

Cannot call `f` with `0` bound to the first parameter because number [1] is incompatible with object type [2].
[incompatible-call]

   destructured_param_default_dep.js:2:3
   2| f(0); // error
        ^ [1]

References:
   destructured_param_default.js:1:31
   1| module.exports = function({}: {} = {}) {}
                                    ^^ [2]


Error ---------------------------------------------------------------------------------------- instantiation_err.js:2:17

Cannot instantiate `T` because `T` [1] is not a polymorphic type. [incompatible-use]

   instantiation_err.js:2:17
   2| export type U = T<string>; // Err: cannot instantiate
                      ^^^^^^^^^

References:
   type_exports.js:1:13
   1| export type T = string;
                  ^ [1]


Error ---------------------------------------------------------------------------------------- instantiation_err.js:2:17

Cannot instantiate `T` because `T` [1] is not a polymorphic type. (FLOW BUG: This is a misplaced error. The original
error was raised in file `instantiation_err_dep.js`). [incompatible-use]

   instantiation_err.js:2:17
   2| export type U = T<string>; // Err: cannot instantiate
                      ^^^^^^^^^

References:
   type_exports.js:1:13
   1| export type T = string;
                  ^ [1]


Error ------------------------------------------------------------------------------------------------- mixin_dep.js:4:7

Cannot call `s.has` with `"foo"` bound to `key` because string [1] is incompatible with number [2]. [incompatible-call]

   mixin_dep.js:4:7
   4| s.has("foo"); // Err: string ~> number (on Seq, _not_ IndexedIterable's inherited method)
            ^^^^^ [1]

References:
   mixin.js:9:48
   9| declare export class IndexedSeq<T> extends Seq<number,T> mixins IndexedIterable<T> {}
                                                     ^^^^^^ [2]


Error --------------------------------------------------------------------------------------------- qualified_dep.js:2:3

Cannot get `b.bzzt` because property `bzzt` is missing in `B` [1]. [prop-missing]

   qualified_dep.js:2:3
   2| b.bzzt; // Error: prop-missing
        ^^^^

References:
   qualified.js:3:26
   3| module.exports = (new B: A.B);
                               ^^^ [1]


Error ---------------------------------------------------------------------------------------- qualified_typeapp.js:3:25

Cannot use `A.B` [1] with fewer than 1 type argument. [missing-type-arg]

   qualified_typeapp.js:3:25
   3| declare module.exports: A.B<>; // Error: missing-type-arg
                              ^^^^^

References:
   qualified_typeapp.js:1:8
   1| class B<T> { x: T }
             ^^^ [1]


Error ------------------------------------------------------------------------------------- qualified_typeapp_dep.js:2:1

Cannot use `A.B` [1] with fewer than 1 type argument. [missing-type-arg]

   qualified_typeapp_dep.js:2:1
   2| b.x; // Error: missing-type-arg
      ^

References:
   qualified_typeapp.js:1:8
   1| class B<T> { x: T }
             ^^^ [1]


Error ---------------------------------------------------------------------------------------- temporary_bool_dep.js:2:2

Cannot cast `x` to boolean literal `false` because boolean [1] is incompatible with boolean literal `false` [2].
[incompatible-cast]

   temporary_bool_dep.js:2:2
   2| (x: false); // error: true ~> false
       ^

References:
   temporary_bool.js:1:44
   1| declare module.exports: $TEMPORARY$boolean<true>;
                                                 ^^^^ [1]
   temporary_bool_dep.js:2:5
   2| (x: false); // error: true ~> false
          ^^^^^ [2]


Error -------------------------------------------------------------------------------------- temporary_number_dep.js:2:2

Cannot cast `x` to number literal `0` because number [1] is incompatible with number literal `0` [2].
[incompatible-cast]

   temporary_number_dep.js:2:2
   2| (x: 0); // error: 42 ~> 0
       ^

References:
   temporary_number.js:1:43
   1| declare module.exports: $TEMPORARY$number<42>;
                                                ^^ [1]
   temporary_number_dep.js:2:5
   2| (x: 0); // error: 42 ~> 0
          ^ [2]


Error -------------------------------------------------------------------------------------- temporary_string_dep.js:2:2

Cannot cast `x` to string literal `bar` because string [1] is incompatible with string literal `bar` [2].
[incompatible-cast]

   temporary_string_dep.js:2:2
   2| (x: 'bar'); // error: foo ~> bar
       ^

References:
   temporary_string.js:1:43
   1| declare module.exports: $TEMPORARY$string<'foo'>;
                                                ^^^^^ [1]
   temporary_string_dep.js:2:5
   2| (x: 'bar'); // error: foo ~> bar
          ^^^^^ [2]



Found 10 errors
