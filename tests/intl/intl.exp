Error ------------------------------------------------------------------------------------------------- collator.js:5:29

Cannot assign `new Intl.Collator()` to `c` because `Intl$Collator` [1] is incompatible with `Intl$PluralRules` [2].
[incompatible-type]

   collator.js:5:29
   5| const c: Intl$PluralRules = new Intl.Collator() // incorrect
                                  ^^^^^^^^^^^^^^^^^^^ [1]

References:
   collator.js:5:10
   5| const c: Intl$PluralRules = new Intl.Collator() // incorrect
               ^^^^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------------- collator.js:6:15

Cannot call `Intl.Collator` with `1` bound to `locales` because: [incompatible-call]
 - Either number [1] is incompatible with string [2].
 - Or number [1] is incompatible with array type [3].

   collator.js:6:15
    6| Intl.Collator(1, {
                     ^ [1]

References:
   <BUILTINS>/intl.js:21:21
   21| type Intl$Locales = Intl$Locale | Intl$Locale[]
                           ^^^^^^^^^^^ [2]
   <BUILTINS>/intl.js:21:35
   21| type Intl$Locales = Intl$Locale | Intl$Locale[]
                                         ^^^^^^^^^^^^^ [3]


Error ------------------------------------------------------------------------------------------------- collator.js:7:18

Cannot call `Intl.Collator` with object literal bound to `options` because string [1] is incompatible with union
type [2] in property `localeMatcher`. [incompatible-call]

   collator.js:7:18
    7|   localeMatcher: 'look fit',
                        ^^^^^^^^^^ [1]

References:
   <BUILTINS>/intl.js:51:19
   51|   localeMatcher?: 'lookup' | 'best fit',
                         ^^^^^^^^^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------------- collator.js:8:10

Cannot call `Intl.Collator` with object literal bound to `options` because string [1] is incompatible with union
type [2] in property `usage`. [incompatible-call]

   collator.js:8:10
    8|   usage: 'find',
                ^^^^^^ [1]

References:
   <BUILTINS>/intl.js:52:11
   52|   usage?: 'sort' | 'search',
                 ^^^^^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------------- collator.js:9:16

Cannot call `Intl.Collator` with object literal bound to `options` because string [1] is incompatible with union
type [2] in property `sensitivity`. [incompatible-call]

   collator.js:9:16
    9|   sensitivity: '',
                      ^^ [1]

References:
   <BUILTINS>/intl.js:53:17
   53|   sensitivity?: 'base' | 'accent' | 'case' | 'variant',
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------------ collator.js:10:22

Cannot call `Intl.Collator` with object literal bound to `options` because null [1] is incompatible with boolean [2] in
property `ignorePunctuation`. [incompatible-call]

   collator.js:10:22
   10|   ignorePunctuation: null,
                            ^^^^ [1]

References:
   <BUILTINS>/intl.js:54:23
   54|   ignorePunctuation?: boolean,
                             ^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------------ collator.js:11:12

Cannot call `Intl.Collator` with object literal bound to `options` because number [1] is incompatible with boolean [2]
in property `numeric`. [incompatible-call]

   collator.js:11:12
   11|   numeric: 1,
                  ^ [1]

References:
   <BUILTINS>/intl.js:55:13
   55|   numeric?: boolean,
                   ^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------------ collator.js:12:14

Cannot call `Intl.Collator` with object literal bound to `options` because string [1] is incompatible with union
type [2] in property `caseFirst`. [incompatible-call]

   collator.js:12:14
   12|   caseFirst: 'true'
                    ^^^^^^ [1]

References:
   <BUILTINS>/intl.js:56:15
   56|   caseFirst?: 'upper' | 'lower' | 'false',
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------------ collator.js:24:16

Cannot call `(new Collator()).format` because property `format` is missing in `Intl$Collator` [1]. [prop-missing]

   collator.js:24:16
   24| new Collator().format() // incorrect
                      ^^^^^^

References:
   collator.js:24:1
   24| new Collator().format() // incorrect
       ^^^^^^^^^^^^^^ [1]


Error ------------------------------------------------------------------------------------------------ collator.js:25:16

Cannot call `(new Collator()).compare` because function [1] requires another argument. [incompatible-call]

   collator.js:25:16
   25| new Collator().compare() // incorrect
                      ^^^^^^^

References:
   <BUILTINS>/intl.js:34:3
   34|   compare (string, string): number;
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]


Error ------------------------------------------------------------------------------------------------ collator.js:26:16

Cannot call `(new Collator()).compare` because function [1] requires another argument. [incompatible-call]

   collator.js:26:16
   26| new Collator().compare('a') // incorrect
                      ^^^^^^^

References:
   <BUILTINS>/intl.js:34:3
   34|   compare (string, string): number;
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]


Error ------------------------------------------------------------------------------------------------ collator.js:32:10

Cannot call `Collator.getCanonicalLocales` because property `getCanonicalLocales` is missing in statics of
`Intl$Collator` [1]. [prop-missing]

   collator.js:32:10
   32| Collator.getCanonicalLocales() // incorrect
                ^^^^^^^^^^^^^^^^^^^

References:
   <BUILTINS>/intl.js:23:15
   23| declare class Intl$Collator {
                     ^^^^^^^^^^^^^ [1]


Error ------------------------------------------------------------------------------------------------ collator.js:34:29

Cannot call `Collator.supportedLocalesOf` with `1` bound to `locales` because: [incompatible-call]
 - Either number [1] is incompatible with string [2].
 - Or number [1] is incompatible with array type [3].

   collator.js:34:29
   34| Collator.supportedLocalesOf(1) // incorrect
                                   ^ [1]

References:
   <BUILTINS>/intl.js:21:21
   21| type Intl$Locales = Intl$Locale | Intl$Locale[]
                           ^^^^^^^^^^^ [2]
   <BUILTINS>/intl.js:21:35
   21| type Intl$Locales = Intl$Locale | Intl$Locale[]
                                         ^^^^^^^^^^^^^ [3]


Error ----------------------------------------------------------------------------------------- date_time_format.js:5:30

Cannot assign `new Intl.DateTimeFormat()` to `c` because `Intl$DateTimeFormat` [1] is incompatible with
`Intl$NumberFormat` [2]. [incompatible-type]

   date_time_format.js:5:30
   5| const c: Intl$NumberFormat = new Intl.DateTimeFormat() // incorrect
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^ [1]

References:
   date_time_format.js:5:10
   5| const c: Intl$NumberFormat = new Intl.DateTimeFormat() // incorrect
               ^^^^^^^^^^^^^^^^^ [2]


Error ----------------------------------------------------------------------------------------- date_time_format.js:6:21

Cannot call `Intl.DateTimeFormat` with `1` bound to `locales` because: [incompatible-call]
 - Either number [1] is incompatible with string [2].
 - Or number [1] is incompatible with array type [3].

   date_time_format.js:6:21
    6| Intl.DateTimeFormat(1, {
                           ^ [1]

References:
   <BUILTINS>/intl.js:21:21
   21| type Intl$Locales = Intl$Locale | Intl$Locale[]
                           ^^^^^^^^^^^ [2]
   <BUILTINS>/intl.js:21:35
   21| type Intl$Locales = Intl$Locale | Intl$Locale[]
                                         ^^^^^^^^^^^^^ [3]


Error ----------------------------------------------------------------------------------------- date_time_format.js:7:18

Cannot call `Intl.DateTimeFormat` with object literal bound to `options` because string [1] is incompatible with union
type [2] in property `localeMatcher`. [incompatible-call]

   date_time_format.js:7:18
     7|   localeMatcher: 'look',
                         ^^^^^^ [1]

References:
   <BUILTINS>/intl.js:104:19
   104|   localeMatcher?: 'lookup' | 'best fit',
                          ^^^^^^^^^^^^^^^^^^^^^ [2]


Error ----------------------------------------------------------------------------------------- date_time_format.js:8:13

Cannot call `Intl.DateTimeFormat` with object literal bound to `options` because number [1] is incompatible with
string [2] in property `timeZone`. [incompatible-call]

   date_time_format.js:8:13
     8|   timeZone: 1,
                    ^ [1]

References:
   <BUILTINS>/intl.js:105:14
   105|   timeZone?: string,
                     ^^^^^^ [2]


Error ----------------------------------------------------------------------------------------- date_time_format.js:9:11

Cannot call `Intl.DateTimeFormat` with object literal bound to `options` because string [1] is incompatible with
boolean [2] in property `hour12`. [incompatible-call]

   date_time_format.js:9:11
     9|   hour12: '',
                  ^^ [1]

References:
   <BUILTINS>/intl.js:106:12
   106|   hour12?: boolean,
                   ^^^^^^^ [2]


Error ---------------------------------------------------------------------------------------- date_time_format.js:10:18

Cannot call `Intl.DateTimeFormat` with object literal bound to `options` because string [1] is incompatible with union
type [2] in property `formatMatcher`. [incompatible-call]

   date_time_format.js:10:18
    10|   formatMatcher: 'basic fit',
                         ^^^^^^^^^^^ [1]

References:
   <BUILTINS>/intl.js:107:19
   107|   formatMatcher?: 'basic' | 'best fit',
                          ^^^^^^^^^^^^^^^^^^^^ [2]


Error ---------------------------------------------------------------------------------------- date_time_format.js:11:12

Cannot call `Intl.DateTimeFormat` with object literal bound to `options` because string [1] is incompatible with union
type [2] in property `weekday`. [incompatible-call]

   date_time_format.js:11:12
    11|   weekday: '2-digit',
                   ^^^^^^^^^ [1]

References:
   <BUILTINS>/intl.js:108:13
   108|   weekday?: 'narrow' | 'short' | 'long',
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error ----------------------------------------------------------------------------------------- date_time_format.js:12:8

Cannot call `Intl.DateTimeFormat` with object literal bound to `options` because string [1] is incompatible with union
type [2] in property `era`. [incompatible-call]

   date_time_format.js:12:8
    12|   era: '',
               ^^ [1]

References:
   <BUILTINS>/intl.js:109:9
   109|   era?: 'narrow' | 'short' | 'long',
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error ----------------------------------------------------------------------------------------- date_time_format.js:13:9

Cannot call `Intl.DateTimeFormat` with object literal bound to `options` because string [1] is incompatible with union
type [2] in property `year`. [incompatible-call]

   date_time_format.js:13:9
    13|   year: '',
                ^^ [1]

References:
   <BUILTINS>/intl.js:110:10
   110|   year?: 'numeric' | '2-digit',
                 ^^^^^^^^^^^^^^^^^^^^^ [2]


Error ---------------------------------------------------------------------------------------- date_time_format.js:14:10

Cannot call `Intl.DateTimeFormat` with object literal bound to `options` because string [1] is incompatible with union
type [2] in property `month`. [incompatible-call]

   date_time_format.js:14:10
    14|   month: '',
                 ^^ [1]

References:
   <BUILTINS>/intl.js:111:11
   111|   month?: 'numeric' | '2-digit' | 'narrow' | 'short' | 'long',
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error ----------------------------------------------------------------------------------------- date_time_format.js:15:8

Cannot call `Intl.DateTimeFormat` with object literal bound to `options` because string [1] is incompatible with union
type [2] in property `day`. [incompatible-call]

   date_time_format.js:15:8
    15|   day: '',
               ^^ [1]

References:
   <BUILTINS>/intl.js:112:9
   112|   day?: 'numeric' | '2-digit',
                ^^^^^^^^^^^^^^^^^^^^^ [2]


Error ----------------------------------------------------------------------------------------- date_time_format.js:16:9

Cannot call `Intl.DateTimeFormat` with object literal bound to `options` because string [1] is incompatible with union
type [2] in property `hour`. [incompatible-call]

   date_time_format.js:16:9
    16|   hour: '',
                ^^ [1]

References:
   <BUILTINS>/intl.js:113:10
   113|   hour?: 'numeric' | '2-digit',
                 ^^^^^^^^^^^^^^^^^^^^^ [2]


Error ---------------------------------------------------------------------------------------- date_time_format.js:17:11

Cannot call `Intl.DateTimeFormat` with object literal bound to `options` because string [1] is incompatible with union
type [2] in property `minute`. [incompatible-call]

   date_time_format.js:17:11
    17|   minute: 'long',
                  ^^^^^^ [1]

References:
   <BUILTINS>/intl.js:114:12
   114|   minute?: 'numeric' | '2-digit',
                   ^^^^^^^^^^^^^^^^^^^^^ [2]


Error ---------------------------------------------------------------------------------------- date_time_format.js:18:11

Cannot call `Intl.DateTimeFormat` with object literal bound to `options` because string [1] is incompatible with union
type [2] in property `second`. [incompatible-call]

   date_time_format.js:18:11
    18|   second: 'short',
                  ^^^^^^^ [1]

References:
   <BUILTINS>/intl.js:115:12
   115|   second?: 'numeric' | '2-digit',
                   ^^^^^^^^^^^^^^^^^^^^^ [2]


Error ---------------------------------------------------------------------------------------- date_time_format.js:19:17

Cannot call `Intl.DateTimeFormat` with object literal bound to `options` because string [1] is incompatible with union
type [2] in property `timeZoneName`. [incompatible-call]

   date_time_format.js:19:17
    19|   timeZoneName: 'narrow'
                        ^^^^^^^^ [1]

References:
   <BUILTINS>/intl.js:116:18
   116|   timeZoneName?: 'short' | 'long',
                         ^^^^^^^^^^^^^^^^ [2]


Error ---------------------------------------------------------------------------------------- date_time_format.js:38:22

Cannot call `(new DateTimeFormat()).select` because property `select` is missing in `Intl$DateTimeFormat` [1].
[prop-missing]

   date_time_format.js:38:22
   38| new DateTimeFormat().select() // incorrect
                            ^^^^^^

References:
   date_time_format.js:38:1
   38| new DateTimeFormat().select() // incorrect
       ^^^^^^^^^^^^^^^^^^^^ [1]


Error ---------------------------------------------------------------------------------------- date_time_format.js:50:16

Cannot call `DateTimeFormat.getCanonicalLocales` because property `getCanonicalLocales` is missing in statics of
`Intl$DateTimeFormat` [1]. [prop-missing]

   date_time_format.js:50:16
   50| DateTimeFormat.getCanonicalLocales() // incorrect
                      ^^^^^^^^^^^^^^^^^^^

References:
   <BUILTINS>/intl.js:63:15
   63| declare class Intl$DateTimeFormat {
                     ^^^^^^^^^^^^^^^^^^^ [1]


Error ---------------------------------------------------------------------------------------- date_time_format.js:52:35

Cannot call `DateTimeFormat.supportedLocalesOf` with `1` bound to `locales` because: [incompatible-call]
 - Either number [1] is incompatible with string [2].
 - Or number [1] is incompatible with array type [3].

   date_time_format.js:52:35
   52| DateTimeFormat.supportedLocalesOf(1) // incorrect
                                         ^ [1]

References:
   <BUILTINS>/intl.js:21:21
   21| type Intl$Locales = Intl$Locale | Intl$Locale[]
                           ^^^^^^^^^^^ [2]
   <BUILTINS>/intl.js:21:35
   21| type Intl$Locales = Intl$Locale | Intl$Locale[]
                                         ^^^^^^^^^^^^^ [3]


Error ----------------------------------------------------------------------------------------------------- intl.js:2:19

Cannot assign `Intl.getCanonicalLocales()` to `a` because array type [1] is incompatible with string [2].
[incompatible-type]

   intl.js:2:19
    2| const a: string = Intl.getCanonicalLocales(); // incorrect
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^

References:
   <BUILTINS>/intl.js:16:53
   16|   getCanonicalLocales?: (locales?: Intl$Locales) => Intl$Locale[],
                                                           ^^^^^^^^^^^^^ [1]
   intl.js:2:10
    2| const a: string = Intl.getCanonicalLocales(); // incorrect
                ^^^^^^ [2]


Error ----------------------------------------------------------------------------------------------------- intl.js:2:24

Cannot call `Intl.getCanonicalLocales` because undefined [1] is not a function. [not-a-function]

   intl.js:2:24
    2| const a: string = Intl.getCanonicalLocales(); // incorrect
                              ^^^^^^^^^^^^^^^^^^^

References:
   <BUILTINS>/intl.js:16:25
   16|   getCanonicalLocales?: (locales?: Intl$Locales) => Intl$Locale[],
                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]


Error ----------------------------------------------------------------------------------------------------- intl.js:5:21

Cannot assign `getCanonicalLocales()` to `b` because array type [1] is incompatible with string [2]. [incompatible-type]

   intl.js:5:21
    5|   const b: string = getCanonicalLocales(); // incorrect
                           ^^^^^^^^^^^^^^^^^^^^^

References:
   <BUILTINS>/intl.js:16:53
   16|   getCanonicalLocales?: (locales?: Intl$Locales) => Intl$Locale[],
                                                           ^^^^^^^^^^^^^ [1]
   intl.js:5:12
    5|   const b: string = getCanonicalLocales(); // incorrect
                  ^^^^^^ [2]


Error ----------------------------------------------------------------------------------------------------- intl.js:6:43

Cannot call `getCanonicalLocales` with `null` bound to `locales` because: [incompatible-call]
 - Either null [1] is incompatible with string [2].
 - Or null [1] is incompatible with array type [3].

   intl.js:6:43
    6|   const c: string[] = getCanonicalLocales(null); // incorrect
                                                 ^^^^ [1]

References:
   <BUILTINS>/intl.js:21:21
   21| type Intl$Locales = Intl$Locale | Intl$Locale[]
                           ^^^^^^^^^^^ [2]
   <BUILTINS>/intl.js:21:35
   21| type Intl$Locales = Intl$Locale | Intl$Locale[]
                                         ^^^^^^^^^^^^^ [3]


Error ----------------------------------------------------------------------------------------------------- intl.js:7:43

Cannot call `getCanonicalLocales` with array literal bound to `locales` because: [incompatible-call]
 - Either number [1] is incompatible with string [2] in array element.
 - Or array literal [3] is incompatible with string [4].

   intl.js:7:43
    7|   const d: string[] = getCanonicalLocales([ 1, 2 ]); // incorrect
                                                 ^^^^^^^^ [3]

References:
   intl.js:7:45
    7|   const d: string[] = getCanonicalLocales([ 1, 2 ]); // incorrect
                                                   ^ [1]
   <BUILTINS>/intl.js:21:35
   21| type Intl$Locales = Intl$Locale | Intl$Locale[]
                                         ^^^^^^^^^^^ [2]
   <BUILTINS>/intl.js:21:21
   21| type Intl$Locales = Intl$Locale | Intl$Locale[]
                           ^^^^^^^^^^^ [4]


Error ---------------------------------------------------------------------------------------------------- intl.js:13:16

Cannot get `Intl.Unknown` because property `Unknown` is missing in object type [1]. [prop-missing]

   intl.js:13:16
   13| const h = Intl.Unknown; // incorrect
                      ^^^^^^^

References:
   <BUILTINS>/intl.js:10:19
                         v
   10| declare var Intl: {
   11|   Collator: Class<Intl$Collator>,
   12|   DateTimeFormat: Class<Intl$DateTimeFormat>,
   13|   Locale: Class<Intl$LocaleClass>,
   14|   NumberFormat: Class<Intl$NumberFormat>,
   15|   PluralRules: ?Class<Intl$PluralRules>,
   16|   getCanonicalLocales?: (locales?: Intl$Locales) => Intl$Locale[],
   17|   ...
   18| }
       ^ [1]


Error ---------------------------------------------------------------------------------------------------- locale.js:3:5

Cannot call `Intl.Locale` because function [1] requires another argument. [incompatible-call]

   locale.js:3:5
     3| new Intl.Locale(); // incorrect
            ^^^^^^^^^^^

References:
   <BUILTINS>/intl.js:132:3
          v-----------
   132|   constructor(
   133|     tag: string,
   134|     options?: Intl$LocaleOptions,
   135|   ): Intl$LocaleClass;
          ------------------^ [1]


Error -------------------------------------------------------------------------------------------------- locale.js:13:38

Cannot call `Intl.Locale` with object literal bound to `options` because number [1] is incompatible with string [2] in
property `calendar`. [incompatible-call]

   locale.js:13:38
    13| new Intl.Locale('en-US', { calendar: 0 }); // incorrect
                                             ^ [1]

References:
   <BUILTINS>/intl.js:143:14
   143|   calendar?: string,
                     ^^^^^^ [2]


Error -------------------------------------------------------------------------------------------------- locale.js:14:39

Cannot call `Intl.Locale` with object literal bound to `options` because string [1] is incompatible with union type [2]
in property `caseFirst`. [incompatible-call]

   locale.js:14:39
    14| new Intl.Locale('en-US', { caseFirst: 'aaa' }); // incorrect
                                              ^^^^^ [1]

References:
   <BUILTINS>/intl.js:144:15
   144|   caseFirst?: 'upper' | 'lower' | 'false',
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error -------------------------------------------------------------------------------------------------- locale.js:15:39

Cannot call `Intl.Locale` with object literal bound to `options` because number [1] is incompatible with string [2] in
property `collation`. [incompatible-call]

   locale.js:15:39
    15| new Intl.Locale('en-US', { collation: 0 }); // incorrect
                                              ^ [1]

References:
   <BUILTINS>/intl.js:145:15
   145|   collation?: string,
                      ^^^^^^ [2]


Error -------------------------------------------------------------------------------------------------- locale.js:16:39

Cannot call `Intl.Locale` with object literal bound to `options` because string [1] is incompatible with union type [2]
in property `hourCycle`. [incompatible-call]

   locale.js:16:39
    16| new Intl.Locale('en-US', { hourCycle: 'aaa' }); // incorrect
                                              ^^^^^ [1]

References:
   <BUILTINS>/intl.js:146:15
   146|   hourCycle?: 'h11' | 'h12' | 'h23' | 'h24',
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error -------------------------------------------------------------------------------------------------- locale.js:17:37

Cannot call `Intl.Locale` with object literal bound to `options` because string [1] is incompatible with boolean [2] in
property `numeric`. [incompatible-call]

   locale.js:17:37
    17| new Intl.Locale('en-US', { numeric: '' }); // incorrect
                                            ^^ [1]

References:
   <BUILTINS>/intl.js:147:13
   147|   numeric?: boolean,
                    ^^^^^^^ [2]


Error -------------------------------------------------------------------------------------------------- locale.js:18:45

Cannot call `Intl.Locale` with object literal bound to `options` because number [1] is incompatible with string [2] in
property `numberingSystem`. [incompatible-call]

   locale.js:18:45
    18| new Intl.Locale('en-US', { numberingSystem: 0 }); // incorrect
                                                    ^ [1]

References:
   <BUILTINS>/intl.js:148:21
   148|   numberingSystem?: string,
                            ^^^^^^ [2]


Error -------------------------------------------------------------------------------------------- number_format.js:5:32

Cannot assign `new Intl.NumberFormat()` to `c` because `Intl$NumberFormat` [1] is incompatible with
`Intl$DateTimeFormat` [2]. [incompatible-type]

   number_format.js:5:32
   5| const c: Intl$DateTimeFormat = new Intl.NumberFormat() // incorrect
                                     ^^^^^^^^^^^^^^^^^^^^^^^ [1]

References:
   number_format.js:5:10
   5| const c: Intl$DateTimeFormat = new Intl.NumberFormat() // incorrect
               ^^^^^^^^^^^^^^^^^^^ [2]


Error -------------------------------------------------------------------------------------------- number_format.js:6:19

Cannot call `Intl.NumberFormat` with `1` bound to `locales` because: [incompatible-call]
 - Either number [1] is incompatible with string [2].
 - Or number [1] is incompatible with array type [3].

   number_format.js:6:19
    6| Intl.NumberFormat(1, {
                         ^ [1]

References:
   <BUILTINS>/intl.js:21:21
   21| type Intl$Locales = Intl$Locale | Intl$Locale[]
                           ^^^^^^^^^^^ [2]
   <BUILTINS>/intl.js:21:35
   21| type Intl$Locales = Intl$Locale | Intl$Locale[]
                                         ^^^^^^^^^^^^^ [3]


Error -------------------------------------------------------------------------------------------- number_format.js:7:18

Cannot call `Intl.NumberFormat` with object literal bound to `options` because string [1] is incompatible with union
type [2] in property `localeMatcher`. [incompatible-call]

   number_format.js:7:18
     7|   localeMatcher: 'best',
                         ^^^^^^ [1]

References:
   <BUILTINS>/intl.js:184:19
   184|   localeMatcher?: 'lookup' | 'best fit',
                          ^^^^^^^^^^^^^^^^^^^^^ [2]


Error -------------------------------------------------------------------------------------------- number_format.js:8:10

Cannot call `Intl.NumberFormat` with object literal bound to `options` because string [1] is incompatible with union
type [2] in property `style`. [incompatible-call]

   number_format.js:8:10
     8|   style: 'octal',
                 ^^^^^^^ [1]

References:
   <BUILTINS>/intl.js:185:11
   185|   style?: 'decimal' | 'currency' | 'percent' | 'unit',
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error -------------------------------------------------------------------------------------------- number_format.js:9:13

Cannot call `Intl.NumberFormat` with object literal bound to `options` because number [1] is incompatible with
string [2] in property `currency`. [incompatible-call]

   number_format.js:9:13
     9|   currency: 123,
                    ^^^ [1]

References:
   <BUILTINS>/intl.js:186:14
   186|   currency?: string,
                     ^^^^^^ [2]


Error ------------------------------------------------------------------------------------------- number_format.js:10:20

Cannot call `Intl.NumberFormat` with object literal bound to `options` because string [1] is incompatible with union
type [2] in property `currencyDisplay`. [incompatible-call]

   number_format.js:10:20
    10|   currencyDisplay: 'sym',
                           ^^^^^ [1]

References:
   <BUILTINS>/intl.js:187:21
   187|   currencyDisplay?: 'symbol' | 'code' | 'name' | 'narrowSymbol',
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------- number_format.js:11:16

Cannot call `Intl.NumberFormat` with object literal bound to `options` because number [1] is incompatible with
boolean [2] in property `useGrouping`. [incompatible-call]

   number_format.js:11:16
    11|   useGrouping: 5,
                       ^ [1]

References:
   <BUILTINS>/intl.js:188:17
   188|   useGrouping?: boolean,
                        ^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------- number_format.js:12:25

Cannot call `Intl.NumberFormat` with object literal bound to `options` because object literal [1] is incompatible with
number [2] in property `minimumIntegerDigits`. [incompatible-call]

   number_format.js:12:25
    12|   minimumIntegerDigits: {},
                                ^^ [1]

References:
   <BUILTINS>/intl.js:189:26
   189|   minimumIntegerDigits?: number,
                                 ^^^^^^ [2]


Error ------------------------------------------------------------------------------------------- number_format.js:13:26

Cannot call `Intl.NumberFormat` with object literal bound to `options` because string [1] is incompatible with
number [2] in property `minimumFractionDigits`. [incompatible-call]

   number_format.js:13:26
    13|   minimumFractionDigits: '',
                                 ^^ [1]

References:
   <BUILTINS>/intl.js:190:27
   190|   minimumFractionDigits?: number,
                                  ^^^^^^ [2]


Error ------------------------------------------------------------------------------------------- number_format.js:14:26

Cannot call `Intl.NumberFormat` with object literal bound to `options` because null [1] is incompatible with number [2]
in property `maximumFractionDigits`. [incompatible-call]

   number_format.js:14:26
    14|   maximumFractionDigits: null,
                                 ^^^^ [1]

References:
   <BUILTINS>/intl.js:191:27
   191|   maximumFractionDigits?: number,
                                  ^^^^^^ [2]


Error ------------------------------------------------------------------------------------------- number_format.js:15:29

Cannot call `Intl.NumberFormat` with object literal bound to `options` because string [1] is incompatible with
number [2] in property `minimumSignificantDigits`. [incompatible-call]

   number_format.js:15:29
    15|   minimumSignificantDigits: '',
                                    ^^ [1]

References:
   <BUILTINS>/intl.js:192:30
   192|   minimumSignificantDigits?: number,
                                     ^^^^^^ [2]


Error ------------------------------------------------------------------------------------------- number_format.js:16:29

Cannot call `Intl.NumberFormat` with object literal bound to `options` because null [1] is incompatible with number [2]
in property `maximumSignificantDigits`. [incompatible-call]

   number_format.js:16:29
    16|   maximumSignificantDigits: null
                                    ^^^^ [1]

References:
   <BUILTINS>/intl.js:193:30
   193|   maximumSignificantDigits?: number,
                                     ^^^^^^ [2]


Error ------------------------------------------------------------------------------------------- number_format.js:32:20

Cannot call `(new NumberFormat()).select` because property `select` is missing in `Intl$NumberFormat` [1].
[prop-missing]

   number_format.js:32:20
   32| new NumberFormat().select() // incorrect
                          ^^^^^^

References:
   number_format.js:32:1
   32| new NumberFormat().select() // incorrect
       ^^^^^^^^^^^^^^^^^^ [1]


Error ------------------------------------------------------------------------------------------- number_format.js:33:20

Cannot call `(new NumberFormat()).format` because function [1] requires another argument. [incompatible-call]

   number_format.js:33:20
    33| new NumberFormat().format() // incorrect
                           ^^^^^^

References:
   <BUILTINS>/intl.js:163:3
   163|   format (number): string;
          ^^^^^^^^^^^^^^^^^^^^^^^ [1]


Error ------------------------------------------------------------------------------------------- number_format.js:39:14

Cannot call `NumberFormat.getCanonicalLocales` because property `getCanonicalLocales` is missing in statics of
`Intl$NumberFormat` [1]. [prop-missing]

   number_format.js:39:14
    39| NumberFormat.getCanonicalLocales() // incorrect
                     ^^^^^^^^^^^^^^^^^^^

References:
   <BUILTINS>/intl.js:152:15
   152| declare class Intl$NumberFormat {
                      ^^^^^^^^^^^^^^^^^ [1]


Error ------------------------------------------------------------------------------------------- number_format.js:41:33

Cannot call `NumberFormat.supportedLocalesOf` with `1` bound to `locales` because: [incompatible-call]
 - Either number [1] is incompatible with string [2].
 - Or number [1] is incompatible with array type [3].

   number_format.js:41:33
   41| NumberFormat.supportedLocalesOf(1) // incorrect
                                       ^ [1]

References:
   <BUILTINS>/intl.js:21:21
   21| type Intl$Locales = Intl$Locale | Intl$Locale[]
                           ^^^^^^^^^^^ [2]
   <BUILTINS>/intl.js:21:35
   21| type Intl$Locales = Intl$Locale | Intl$Locale[]
                                         ^^^^^^^^^^^^^ [3]


Error --------------------------------------------------------------------------------------------- plural_rules.js:3:16

Cannot call `Intl.PluralRules` because null or undefined [1] is not a function. [not-a-function]

   plural_rules.js:3:16
    3| const a = Intl.PluralRules(); // incorrect
                      ^^^^^^^^^^^

References:
   <BUILTINS>/intl.js:15:16
   15|   PluralRules: ?Class<Intl$PluralRules>,
                      ^^^^^^^^^^^^^^^^^^^^^^^^ [1]


Error --------------------------------------------------------------------------------------------- plural_rules.js:3:16

Cannot call `Intl.PluralRules` because a call signature declaring the expected parameter / return type is missing in
statics of `Intl$PluralRules` [1]. [prop-missing]

   plural_rules.js:3:16
     3| const a = Intl.PluralRules(); // incorrect
                       ^^^^^^^^^^^

References:
   <BUILTINS>/intl.js:197:15
   197| declare class Intl$PluralRules {
                      ^^^^^^^^^^^^^^^^ [1]


Error --------------------------------------------------------------------------------------------- plural_rules.js:6:13

Cannot call `PluralRules` because a call signature declaring the expected parameter / return type is missing in statics
of `Intl$PluralRules` [1]. [prop-missing]

   plural_rules.js:6:13
     6|   const b = PluralRules(); // incorrect
                    ^^^^^^^^^^^

References:
   <BUILTINS>/intl.js:197:15
   197| declare class Intl$PluralRules {
                      ^^^^^^^^^^^^^^^^ [1]


Error --------------------------------------------------------------------------------------------- plural_rules.js:8:19

Cannot call `PluralRules` with `1` bound to `locales` because: [incompatible-call]
 - Either number [1] is incompatible with string [2].
 - Or number [1] is incompatible with array type [3].

   plural_rules.js:8:19
    8|   new PluralRules(1); // incorrect
                         ^ [1]

References:
   <BUILTINS>/intl.js:21:21
   21| type Intl$Locales = Intl$Locale | Intl$Locale[]
                           ^^^^^^^^^^^ [2]
   <BUILTINS>/intl.js:21:35
   21| type Intl$Locales = Intl$Locale | Intl$Locale[]
                                         ^^^^^^^^^^^^^ [3]


Error -------------------------------------------------------------------------------------------- plural_rules.js:12:20

Cannot call `PluralRules` with object literal bound to `options` because string [1] is incompatible with union type [2]
in property `localeMatcher`. [incompatible-call]

   plural_rules.js:12:20
    12|     localeMatcher: 'best one',
                           ^^^^^^^^^^ [1]

References:
   <BUILTINS>/intl.js:223:19
   223|   localeMatcher?: 'lookup' | 'best fit',
                          ^^^^^^^^^^^^^^^^^^^^^ [2]


Error -------------------------------------------------------------------------------------------- plural_rules.js:13:11

Cannot call `PluralRules` with object literal bound to `options` because string [1] is incompatible with union type [2]
in property `type`. [incompatible-call]

   plural_rules.js:13:11
    13|     type: 'count',
                  ^^^^^^^ [1]

References:
   <BUILTINS>/intl.js:224:10
   224|   type?: 'cardinal' | 'ordinal',
                 ^^^^^^^^^^^^^^^^^^^^^^ [2]


Error -------------------------------------------------------------------------------------------- plural_rules.js:14:27

Cannot call `PluralRules` with object literal bound to `options` because string [1] is incompatible with number [2] in
property `minimumIntegerDigits`. [incompatible-call]

   plural_rules.js:14:27
    14|     minimumIntegerDigits: '',
                                  ^^ [1]

References:
   <BUILTINS>/intl.js:225:26
   225|   minimumIntegerDigits?: number,
                                 ^^^^^^ [2]


Error -------------------------------------------------------------------------------------------- plural_rules.js:17:31

Cannot call `PluralRules` with object literal bound to `options` because `Intl$PluralRules` [1] is incompatible with
number [2] in property `minimumSignificantDigits`. [incompatible-call]

   plural_rules.js:17:31
    17|     minimumSignificantDigits: c,
                                      ^

References:
   plural_rules.js:7:13
     7|   const c = new PluralRules(); // correct
                    ^^^^^^^^^^^^^^^^^ [1]
   <BUILTINS>/intl.js:228:30
   228|   minimumSignificantDigits?: number,
                                     ^^^^^^ [2]


Error -------------------------------------------------------------------------------------------- plural_rules.js:18:31

Cannot call `PluralRules` with object literal bound to `options` because string [1] is incompatible with number [2] in
property `maximumSignificantDigits`. [incompatible-call]

   plural_rules.js:18:31
    18|     maximumSignificantDigits: ''
                                      ^^ [1]

References:
   <BUILTINS>/intl.js:229:30
   229|   maximumSignificantDigits?: number,
                                     ^^^^^^ [2]


Error -------------------------------------------------------------------------------------------- plural_rules.js:30:21

Cannot call `(new PluralRules()).format` because property `format` is missing in `Intl$PluralRules` [1]. [prop-missing]

   plural_rules.js:30:21
   30|   new PluralRules().format() // incorrect
                           ^^^^^^

References:
   plural_rules.js:30:3
   30|   new PluralRules().format() // incorrect
         ^^^^^^^^^^^^^^^^^ [1]


Error -------------------------------------------------------------------------------------------- plural_rules.js:31:21

Cannot call `(new PluralRules()).select` because function [1] requires another argument. [incompatible-call]

   plural_rules.js:31:21
    31|   new PluralRules().select() // incorrect
                            ^^^^^^

References:
   <BUILTINS>/intl.js:203:3
   203|   select (number): Intl$PluralRule;
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]


Error -------------------------------------------------------------------------------------------- plural_rules.js:37:15

Cannot call `PluralRules.getCanonicalLocales` because property `getCanonicalLocales` is missing in statics of
`Intl$PluralRules` [1]. [prop-missing]

   plural_rules.js:37:15
    37|   PluralRules.getCanonicalLocales() // incorrect
                      ^^^^^^^^^^^^^^^^^^^

References:
   <BUILTINS>/intl.js:197:15
   197| declare class Intl$PluralRules {
                      ^^^^^^^^^^^^^^^^ [1]


Error -------------------------------------------------------------------------------------------- plural_rules.js:39:34

Cannot call `PluralRules.supportedLocalesOf` with `1` bound to `locales` because: [incompatible-call]
 - Either number [1] is incompatible with string [2].
 - Or number [1] is incompatible with array type [3].

   plural_rules.js:39:34
   39|   PluralRules.supportedLocalesOf(1) // incorrect
                                        ^ [1]

References:
   <BUILTINS>/intl.js:21:21
   21| type Intl$Locales = Intl$Locale | Intl$Locale[]
                           ^^^^^^^^^^^ [2]
   <BUILTINS>/intl.js:21:35
   21| type Intl$Locales = Intl$Locale | Intl$Locale[]
                                         ^^^^^^^^^^^^^ [3]



Found 73 errors

Only showing the most relevant union/intersection branches.
To see all branches, re-run Flow with --show-all-branches
