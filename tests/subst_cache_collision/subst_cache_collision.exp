Error ----------------------------------------------------------------------------------------------------- test.js:5:16

Cannot call `expectFooProps` with object literal bound to `props` because object literal [1] is incompatible with
empty [2]. [incompatible-call]

   test.js:5:16
   5| expectFooProps({...props}); // busted due to subst cache collision
                     ^^^^^^^^^^ [1]

References:
   wrapper.js:7:55
   7| declare export default function expectFooProps(props: React.PropsOf<Foo<>>): void; // busted due to subst cache collision
                                                            ^^^^^^^^^^^^^^^^^^^^ [2]


Error -------------------------------------------------------------------------------------------------- wrapper.js:7:69

Cannot instantiate `React.PropsOf` because in type argument `E`: [incompatible-type-arg]
 - Either component Foo [1] is incompatible with `React.Element` [2].
 - Or component Foo [1] is incompatible with string [3].

   wrapper.js:7:69
     7| declare export default function expectFooProps(props: React.PropsOf<Foo<>>): void; // busted due to subst cache collision
                                                                            ^^^^^ [1]

References:
   <BUILTINS>/react.js:213:28
   213|   type PropsOf<E: string | React$MixedElement> = E extends React$Element<infer C> ? React$ElementConfig<C> : (E extends string ? $JSXIntrinsics[E]['props'] : empty);
                                   ^^^^^^^^^^^^^^^^^^ [2]
   <BUILTINS>/react.js:213:19
   213|   type PropsOf<E: string | React$MixedElement> = E extends React$Element<infer C> ? React$ElementConfig<C> : (E extends string ? $JSXIntrinsics[E]['props'] : empty);
                          ^^^^^^ [3]


Error -------------------------------------------------------------------------------------------------- wrapper.js:7:69

Cannot instantiate `React.PropsOf` because in type argument `E`: [incompatible-type-arg]
 - Either component Foo [1] is incompatible with `React.Element` [2].
 - Or component Foo [1] is incompatible with string [3].

   wrapper.js:7:69
     7| declare export default function expectFooProps(props: React.PropsOf<Foo<>>): void; // busted due to subst cache collision
                                                                            ^^^^^ [1]

References:
   <BUILTINS>/react.js:336:43
   336|   declare export type PropsOf<E: string | React$MixedElement> = React.PropsOf<E>;
                                                  ^^^^^^^^^^^^^^^^^^ [2]
   <BUILTINS>/react.js:336:34
   336|   declare export type PropsOf<E: string | React$MixedElement> = React.PropsOf<E>;
                                         ^^^^^^ [3]


Error -------------------------------------------------------------------------------------------------- wrapper.js:7:69

Cannot instantiate `React.PropsOf` because in type argument `E`: [incompatible-type-arg]
 - Either component Foo [1] is incompatible with `React.Element` [2].
 - Or component Foo [1] is incompatible with string [3].

   wrapper.js:7:69
      7| declare export default function expectFooProps(props: React.PropsOf<Foo<>>): void; // busted due to subst cache collision
                                                                             ^^^^^ [1]

References:
   <BUILTINS>/react.js:1003:30
   1003|     type PropsOf<E: string | React$MixedElement> = globalThis.React.PropsOf<E>;
                                      ^^^^^^^^^^^^^^^^^^ [2]
   <BUILTINS>/react.js:1003:21
   1003|     type PropsOf<E: string | React$MixedElement> = globalThis.React.PropsOf<E>;
                             ^^^^^^ [3]



Found 4 errors

Only showing the most relevant union/intersection branches.
To see all branches, re-run Flow with --show-all-branches
