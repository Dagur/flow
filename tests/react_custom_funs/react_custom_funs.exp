Error -------------------------------------------------------------------------------------------- clone_element.js:20:1

Cannot call `React.cloneElement` without at least 1 argument. [missing-arg]

   20| React.cloneElement(); // Error: Needs a minimum of two arguments.
       ^^^^^^^^^^^^^^^^^^^^


Error ------------------------------------------------------------------------------------------- clone_element.js:21:20

string [1] is incompatible with `React.Element` [1]. [incompatible-type]

   21| React.cloneElement('nope'); // Error: Not a valid element type.
                          ^^^^^^ [1]


Error ------------------------------------------------------------------------------------------- clone_element.js:22:20

object literal [1] is incompatible with `React.Element` [2]. [incompatible-type]

   clone_element.js:22:20
    22| React.cloneElement({ type: any }); // Error: Not a valid element type.
                           ^^^^^^^^^^^^^ [1]

References:
   <BUILTINS>/react.js:155:21
   155| declare opaque type React$Element<+ElementType: React$ElementType, +P = React$ElementProps<ElementType>>: {|
                            ^^^^^^^^^^^^^ [2]


Error -------------------------------------------------------------------------------------------- clone_element.js:26:2

Cannot cast `React.cloneElement(...).type` to statics of `B` because `A` [1] is incompatible with `B` [2].
[incompatible-cast]

   clone_element.js:26:2
   26| (React.cloneElement(a).type: Class<B>); // Error: `a` has a type of `A`.
        ^^^^^^^^^^^^^^^^^^^^^^^^^^

References:
   clone_element.js:14:30
   14| declare var a: Element<Class<A>>;
                                    ^ [1]
   clone_element.js:26:36
   26| (React.cloneElement(a).type: Class<B>); // Error: `a` has a type of `A`.
                                          ^ [2]


Error -------------------------------------------------------------------------------------------- clone_element.js:26:2

Cannot cast `React.cloneElement(...).type` to statics of `B` because property `bar` is missing in object type [1] but
exists in object type [2]. [prop-missing]

   clone_element.js:26:2
   26| (React.cloneElement(a).type: Class<B>); // Error: `a` has a type of `A`.
        ^^^^^^^^^^^^^^^^^^^^^^^^^^

References:
   clone_element.js:6:33
    6| class A extends React.Component<{foo: number}, void> {}
                                       ^^^^^^^^^^^^^ [1]
   clone_element.js:7:33
    7| class B extends React.Component<{foo: number, bar: number}, void> {}
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------- clone_element.js:28:30

Cannot get `React.cloneElement(...).props.bar` because property `bar` is missing in object type [1]. [prop-missing]

   clone_element.js:28:30
   28| (React.cloneElement(a).props.bar: empty); // Error: `bar` does not exist.
                                    ^^^

References:
   clone_element.js:6:33
    6| class A extends React.Component<{foo: number}, void> {}
                                       ^^^^^^^^^^^^^ [1]


Error -------------------------------------------------------------------------------------------- clone_element.js:29:2

Cannot cast `React.cloneElement(...).props.foo` to string because number [1] is incompatible with string [2].
[incompatible-cast]

   clone_element.js:29:2
   29| (React.cloneElement(a).props.foo: string); // Error: `foo` is number.
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

References:
   clone_element.js:6:39
    6| class A extends React.Component<{foo: number}, void> {}
                                             ^^^^^^ [1]
   clone_element.js:29:35
   29| (React.cloneElement(a).props.foo: string); // Error: `foo` is number.
                                         ^^^^^^ [2]


Error -------------------------------------------------------------------------------------------- clone_element.js:32:2

Cannot cast `React.cloneElement(...).props.foo` to string because number [1] is incompatible with string [2].
[incompatible-cast]

   clone_element.js:32:2
   32| (React.cloneElement(b).props.foo: string); // Error: `foo` is number.
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

References:
   clone_element.js:7:39
    7| class B extends React.Component<{foo: number, bar: number}, void> {}
                                             ^^^^^^ [1]
   clone_element.js:32:35
   32| (React.cloneElement(b).props.foo: string); // Error: `foo` is number.
                                         ^^^^^^ [2]


Error ------------------------------------------------------------------------------------------- clone_element.js:39:29

Cannot call `React.cloneElement` because string [1] is incompatible with number [2] in property `foo`.
[incompatible-call]

   clone_element.js:39:29
   39| React.cloneElement(a, {foo: '1'}); // Error: `foo` is a number.
                                   ^^^ [1]

References:
   clone_element.js:6:39
    6| class A extends React.Component<{foo: number}, void> {}
                                             ^^^^^^ [2]


Error ------------------------------------------------------------------------------------------- clone_element.js:45:29

Cannot call `React.cloneElement` because string [1] is incompatible with number [2] in property `foo`.
[incompatible-call]

   clone_element.js:45:29
   45| React.cloneElement(b, {foo: '1'}); // Error: `foo` is a number.
                                   ^^^ [1]

References:
   clone_element.js:7:39
    7| class B extends React.Component<{foo: number, bar: number}, void> {}
                                             ^^^^^^ [2]


Error ------------------------------------------------------------------------------------------- clone_element.js:51:34

Cannot call `React.cloneElement` because string [1] is incompatible with number [2] in property `children`.
[incompatible-call]

   clone_element.js:51:34
   51| React.cloneElement(c, {children: '42'}); // Error: `children` is a number.
                                        ^^^^ [1]

References:
   clone_element.js:8:44
    8| class C extends React.Component<{children: number}, void> {}
                                                  ^^^^^^ [2]


Error ------------------------------------------------------------------------------------------- clone_element.js:55:23

Cannot call `React.cloneElement` because children array [1] is incompatible with number [2] in property `children`.
[incompatible-call]

   clone_element.js:55:23
   55| React.cloneElement(c, {}, 1, 2, 3); // Error: `children` is not an array.
                             ^^

References:
   clone_element.js:55:1
   55| React.cloneElement(c, {}, 1, 2, 3); // Error: `children` is not an array.
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]
   clone_element.js:8:44
    8| class C extends React.Component<{children: number}, void> {}
                                                  ^^^^^^ [2]


Error ------------------------------------------------------------------------------------------- clone_element.js:56:23

Cannot call `React.cloneElement` because children array [1] is incompatible with number [2] in property `children`.
[incompatible-call]

   clone_element.js:56:23
   56| React.cloneElement(c, undefined, 1, 2, 3); // Error: `children` is not an array.
                             ^^^^^^^^^

References:
   clone_element.js:56:1
   56| React.cloneElement(c, undefined, 1, 2, 3); // Error: `children` is not an array.
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]
   clone_element.js:8:44
    8| class C extends React.Component<{children: number}, void> {}
                                                  ^^^^^^ [2]


Error ------------------------------------------------------------------------------------------- clone_element.js:57:23

Cannot call `React.cloneElement` because children array [1] is incompatible with number [2] in property `children`.
[incompatible-call]

   clone_element.js:57:23
   57| React.cloneElement(c, null, 1, 2, 3); // Error: `children` is not an array.
                             ^^^^

References:
   clone_element.js:57:1
   57| React.cloneElement(c, null, 1, 2, 3); // Error: `children` is not an array.
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]
   clone_element.js:8:44
    8| class C extends React.Component<{children: number}, void> {}
                                                  ^^^^^^ [2]


Error ------------------------------------------------------------------------------------------- clone_element.js:61:34

Cannot call `React.cloneElement` because number [1] is incompatible with array type [2] in property `children`.
[incompatible-call]

   clone_element.js:61:34
   61| React.cloneElement(d, {children: 42}); // Error: `children` is an array.
                                        ^^ [1]

References:
   clone_element.js:9:44
    9| class D extends React.Component<{children: Array<number>}, void> {}
                                                  ^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------- clone_element.js:63:23

Cannot call `React.cloneElement` because number [1] is incompatible with array type [2] in property `children`.
[incompatible-call]

   clone_element.js:63:23
   63| React.cloneElement(d, {}, 42); // Error: `children` is an array.
                             ^^

References:
   clone_element.js:63:27
   63| React.cloneElement(d, {}, 42); // Error: `children` is an array.
                                 ^^ [1]
   clone_element.js:9:44
    9| class D extends React.Component<{children: Array<number>}, void> {}
                                                  ^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------- clone_element.js:64:23

Cannot call `React.cloneElement` because number [1] is incompatible with array type [2] in property `children`.
[incompatible-call]

   clone_element.js:64:23
   64| React.cloneElement(d, undefined, 42); // Error: `children` is an array.
                             ^^^^^^^^^

References:
   clone_element.js:64:34
   64| React.cloneElement(d, undefined, 42); // Error: `children` is an array.
                                        ^^ [1]
   clone_element.js:9:44
    9| class D extends React.Component<{children: Array<number>}, void> {}
                                                  ^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------- clone_element.js:65:23

Cannot call `React.cloneElement` because number [1] is incompatible with array type [2] in property `children`.
[incompatible-call]

   clone_element.js:65:23
   65| React.cloneElement(d, null, 42); // Error: `children` is an array.
                             ^^^^

References:
   clone_element.js:65:29
   65| React.cloneElement(d, null, 42); // Error: `children` is an array.
                                   ^^ [1]
   clone_element.js:9:44
    9| class D extends React.Component<{children: Array<number>}, void> {}
                                                  ^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------- clone_element.js:77:40

Cannot call `React.cloneElement` because string [1] is incompatible with number [2] in property `p`. [incompatible-call]

   clone_element.js:77:40
   77| React.cloneElement(<SFC p={0} />, { p: "bad" }); // Error: string ~> number
                                              ^^^^^ [1]

References:
   clone_element.js:76:26
   76| function SFC(props: { p: number }) { return null };
                                ^^^^^^ [2]


Error ------------------------------------------------------------------------------------------- clone_element.js:83:27

Cannot call `React.cloneElement` because property `bar` is missing in object type [1] but exists in props [2].
[prop-missing]

   clone_element.js:83:27
   83| React.cloneElement(exact, {foo: 1, bar: 2}); // ERROR
                                 ^^^^^^^^^^^^^^^^ [2]

References:
   clone_element.js:80:24
   80| declare function Exact({|foo: number|}): void;
                              ^^^^^^^^^^^^^^^ [1]


Error ------------------------------------------------------------------------------------------ clone_element.js:100:26

Cannot call `React.cloneElement` because props [1] is incompatible with empty [2]. [incompatible-call]

   clone_element.js:100:26
   100|   React.cloneElement(el, {}); // ERROR
                                 ^^ [1]

References:
   <BUILTINS>/react.js:149:29
   149|   | React$AbstractComponent<empty, mixed, React$Node>;
                                    ^^^^^ [2]


Error ------------------------------------------------------------------------------------------ clone_element.js:106:22

`$Iterable` [1] is incompatible with `React.Element` [2]. [incompatible-type]

   clone_element.js:106:22
   106|   React.cloneElement(el); // ERROR
                             ^^

References:
   clone_element.js:105:21
   105|   declare const el: React.Node;
                            ^^^^^^^^^^ [1]
   <BUILTINS>/react.js:155:21
   155| declare opaque type React$Element<+ElementType: React$ElementType, +P = React$ElementProps<ElementType>>: {|
                            ^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------ clone_element.js:106:22

`React.Portal` [1] is incompatible with `React.Element` [2]. [incompatible-type]

   clone_element.js:106:22
   106|   React.cloneElement(el); // ERROR
                             ^^

References:
   clone_element.js:105:21
   105|   declare const el: React.Node;
                            ^^^^^^^^^^ [1]
   <BUILTINS>/react.js:155:21
   155| declare opaque type React$Element<+ElementType: React$ElementType, +P = React$ElementProps<ElementType>>: {|
                            ^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------ clone_element.js:106:22

boolean [1] is incompatible with `React.Element` [2]. [incompatible-type]

   clone_element.js:106:22
   106|   React.cloneElement(el); // ERROR
                             ^^

References:
   clone_element.js:105:21
   105|   declare const el: React.Node;
                            ^^^^^^^^^^ [1]
   <BUILTINS>/react.js:155:21
   155| declare opaque type React$Element<+ElementType: React$ElementType, +P = React$ElementProps<ElementType>>: {|
                            ^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------ clone_element.js:106:22

null [1] is incompatible with `React.Element` [2]. [incompatible-type]

   clone_element.js:106:22
   106|   React.cloneElement(el); // ERROR
                             ^^

References:
   clone_element.js:105:21
   105|   declare const el: React.Node;
                            ^^^^^^^^^^ [1]
   <BUILTINS>/react.js:155:21
   155| declare opaque type React$Element<+ElementType: React$ElementType, +P = React$ElementProps<ElementType>>: {|
                            ^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------ clone_element.js:106:22

number [1] is incompatible with `React.Element` [2]. [incompatible-type]

   clone_element.js:106:22
   106|   React.cloneElement(el); // ERROR
                             ^^

References:
   clone_element.js:105:21
   105|   declare const el: React.Node;
                            ^^^^^^^^^^ [1]
   <BUILTINS>/react.js:155:21
   155| declare opaque type React$Element<+ElementType: React$ElementType, +P = React$ElementProps<ElementType>>: {|
                            ^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------ clone_element.js:106:22

string [1] is incompatible with `React.Element` [2]. [incompatible-type]

   clone_element.js:106:22
   106|   React.cloneElement(el); // ERROR
                             ^^

References:
   clone_element.js:105:21
   105|   declare const el: React.Node;
                            ^^^^^^^^^^ [1]
   <BUILTINS>/react.js:155:21
   155| declare opaque type React$Element<+ElementType: React$ElementType, +P = React$ElementProps<ElementType>>: {|
                            ^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------ clone_element.js:106:22

undefined [1] is incompatible with `React.Element` [2]. [incompatible-type]

   clone_element.js:106:22
   106|   React.cloneElement(el); // ERROR
                             ^^

References:
   clone_element.js:105:21
   105|   declare const el: React.Node;
                            ^^^^^^^^^^ [1]
   <BUILTINS>/react.js:155:21
   155| declare opaque type React$Element<+ElementType: React$ElementType, +P = React$ElementProps<ElementType>>: {|
                            ^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------ clone_element.js:107:22

`$Iterable` [1] is incompatible with `React.Element` [2]. [incompatible-type]

   clone_element.js:107:22
   107|   React.cloneElement(el, {}); // ERROR
                             ^^

References:
   clone_element.js:105:21
   105|   declare const el: React.Node;
                            ^^^^^^^^^^ [1]
   <BUILTINS>/react.js:155:21
   155| declare opaque type React$Element<+ElementType: React$ElementType, +P = React$ElementProps<ElementType>>: {|
                            ^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------ clone_element.js:107:22

`React.Portal` [1] is incompatible with `React.Element` [2]. [incompatible-type]

   clone_element.js:107:22
   107|   React.cloneElement(el, {}); // ERROR
                             ^^

References:
   clone_element.js:105:21
   105|   declare const el: React.Node;
                            ^^^^^^^^^^ [1]
   <BUILTINS>/react.js:155:21
   155| declare opaque type React$Element<+ElementType: React$ElementType, +P = React$ElementProps<ElementType>>: {|
                            ^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------ clone_element.js:107:22

boolean [1] is incompatible with `React.Element` [2]. [incompatible-type]

   clone_element.js:107:22
   107|   React.cloneElement(el, {}); // ERROR
                             ^^

References:
   clone_element.js:105:21
   105|   declare const el: React.Node;
                            ^^^^^^^^^^ [1]
   <BUILTINS>/react.js:155:21
   155| declare opaque type React$Element<+ElementType: React$ElementType, +P = React$ElementProps<ElementType>>: {|
                            ^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------ clone_element.js:107:22

null [1] is incompatible with `React.Element` [2]. [incompatible-type]

   clone_element.js:107:22
   107|   React.cloneElement(el, {}); // ERROR
                             ^^

References:
   clone_element.js:105:21
   105|   declare const el: React.Node;
                            ^^^^^^^^^^ [1]
   <BUILTINS>/react.js:155:21
   155| declare opaque type React$Element<+ElementType: React$ElementType, +P = React$ElementProps<ElementType>>: {|
                            ^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------ clone_element.js:107:22

number [1] is incompatible with `React.Element` [2]. [incompatible-type]

   clone_element.js:107:22
   107|   React.cloneElement(el, {}); // ERROR
                             ^^

References:
   clone_element.js:105:21
   105|   declare const el: React.Node;
                            ^^^^^^^^^^ [1]
   <BUILTINS>/react.js:155:21
   155| declare opaque type React$Element<+ElementType: React$ElementType, +P = React$ElementProps<ElementType>>: {|
                            ^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------ clone_element.js:107:22

string [1] is incompatible with `React.Element` [2]. [incompatible-type]

   clone_element.js:107:22
   107|   React.cloneElement(el, {}); // ERROR
                             ^^

References:
   clone_element.js:105:21
   105|   declare const el: React.Node;
                            ^^^^^^^^^^ [1]
   <BUILTINS>/react.js:155:21
   155| declare opaque type React$Element<+ElementType: React$ElementType, +P = React$ElementProps<ElementType>>: {|
                            ^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------ clone_element.js:107:22

undefined [1] is incompatible with `React.Element` [2]. [incompatible-type]

   clone_element.js:107:22
   107|   React.cloneElement(el, {}); // ERROR
                             ^^

References:
   clone_element.js:105:21
   105|   declare const el: React.Node;
                            ^^^^^^^^^^ [1]
   <BUILTINS>/react.js:155:21
   155| declare opaque type React$Element<+ElementType: React$ElementType, +P = React$ElementProps<ElementType>>: {|
                            ^^^^^^^^^^^^^ [2]


Error -------------------------------------------------------------------------------------------- create_element.js:5:1

Cannot call `React.createElement` without at least 1 argument. [missing-arg]

   5| React.createElement(); // Error: Needs a minimum of two arguments.
      ^^^^^^^^^^^^^^^^^^^^^


Error ------------------------------------------------------------------------------------------- create_element.js:7:21

Cannot call `React.createElement` because number [1] is not a React component. [not-a-component]

   7| React.createElement(42); // Error: Number is not a valid component type.
                          ^^ [1]


Error ------------------------------------------------------------------------------------------- create_element.js:7:21

Cannot instantiate `React.Element` because in type argument `ElementType`: [incompatible-type-arg]
 - Either number [1] is incompatible with string [2].
 - Or number [1] is incompatible with AbstractComponent [3].

   create_element.js:7:21
     7| React.createElement(42); // Error: Number is not a valid component type.
                            ^^ [1]

References:
   <BUILTINS>/react.js:148:5
   148|   | string
            ^^^^^^ [2]
   <BUILTINS>/react.js:149:5
   149|   | React$AbstractComponent<empty, mixed, React$Node>;
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [3]


Error ------------------------------------------------------------------------------------------- create_element.js:9:21

Cannot call `React.createElement` because number [1] is not a React component. [not-a-component]

   9| React.createElement(42, {}); // Error: Number is not a valid component type.
                          ^^ [1]


Error ------------------------------------------------------------------------------------------- create_element.js:9:21

Cannot instantiate `React.Element` because in type argument `ElementType`: [incompatible-type-arg]
 - Either number [1] is incompatible with string [2].
 - Or number [1] is incompatible with AbstractComponent [3].

   create_element.js:9:21
     9| React.createElement(42, {}); // Error: Number is not a valid component type.
                            ^^ [1]

References:
   <BUILTINS>/react.js:148:5
   148|   | string
            ^^^^^^ [2]
   <BUILTINS>/react.js:149:5
   149|   | React$AbstractComponent<empty, mixed, React$Node>;
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [3]


Error ------------------------------------------------------------------------------------------ create_element.js:10:21

Cannot call `React.createElement` because object literal [1] is not a React component. [not-a-component]

   10| React.createElement({}, {}); // Error: Object is not a valid component type.
                           ^^ [1]


Error ------------------------------------------------------------------------------------------ create_element.js:10:21

Cannot instantiate `React.Element` because in type argument `ElementType`: [incompatible-type-arg]
 - Either object literal [1] is incompatible with AbstractComponent [2].
 - Or object literal [1] is incompatible with string [3].

   create_element.js:10:21
    10| React.createElement({}, {}); // Error: Object is not a valid component type.
                            ^^ [1]

References:
   <BUILTINS>/react.js:149:5
   149|   | React$AbstractComponent<empty, mixed, React$Node>;
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]
   <BUILTINS>/react.js:148:5
   148|   | string
            ^^^^^^ [3]


Error ------------------------------------------------------------------------------------------- create_element.js:20:8

Cannot call `React.createElement` because string [1] is incompatible with number [2] in property `bar`.
[incompatible-call]

   create_element.js:20:8
   20|   bar: 'Hello, world!', // Error: `bar` is a string.
              ^^^^^^^^^^^^^^^ [1]

References:
   create_element.js:13:52
   13| class A extends React.Component<{foo: number, bar: number}> {}
                                                          ^^^^^^ [2]


Error ------------------------------------------------------------------------------------------- create_element.js:24:8

Cannot call `React.createElement` because string [1] is incompatible with number [2] in property `bar`.
[incompatible-call]

   create_element.js:24:8
   24|   bar: 'Hello, world!', // Error: `bar` is a string.
              ^^^^^^^^^^^^^^^ [1]

References:
   create_element.js:14:38
   14| function B(props: {foo: number, bar: number}) { return null }
                                            ^^^^^^ [2]


Error ------------------------------------------------------------------------------------------ create_element.js:26:24

Cannot call `React.createElement` because property `bar` is missing in props [1] but exists in object type [2].
[prop-missing]

   create_element.js:26:24
   26| React.createElement(A, {foo: 42}); // Error: `bar` is missing.
                              ^^^^^^^^^ [1]

References:
   create_element.js:13:33
   13| class A extends React.Component<{foo: number, bar: number}> {}
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------ create_element.js:27:24

Cannot call `React.createElement` because property `bar` is missing in props [1] but exists in object type [2].
[prop-missing]

   create_element.js:27:24
   27| React.createElement(B, {foo: 42}); // Error: `bar` is missing.
                              ^^^^^^^^^ [1]

References:
   create_element.js:14:19
   14| function B(props: {foo: number, bar: number}) { return null }
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------ create_element.js:28:24

Cannot call `React.createElement` because property `bar` is missing in props [1] but exists in object type [2].
[prop-missing]

   create_element.js:28:24
   28| React.createElement(A, undefined); // Error: `foo` and `bar` are missing.
                              ^^^^^^^^^ [1]

References:
   create_element.js:13:33
   13| class A extends React.Component<{foo: number, bar: number}> {}
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------ create_element.js:28:24

Cannot call `React.createElement` because property `foo` is missing in props [1] but exists in object type [2].
[prop-missing]

   create_element.js:28:24
   28| React.createElement(A, undefined); // Error: `foo` and `bar` are missing.
                              ^^^^^^^^^ [1]

References:
   create_element.js:13:33
   13| class A extends React.Component<{foo: number, bar: number}> {}
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------ create_element.js:29:24

Cannot call `React.createElement` because property `bar` is missing in props [1] but exists in object type [2].
[prop-missing]

   create_element.js:29:24
   29| React.createElement(B, undefined); // Error: `foo` and `bar` are missing.
                              ^^^^^^^^^ [1]

References:
   create_element.js:14:19
   14| function B(props: {foo: number, bar: number}) { return null }
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------ create_element.js:29:24

Cannot call `React.createElement` because property `foo` is missing in props [1] but exists in object type [2].
[prop-missing]

   create_element.js:29:24
   29| React.createElement(B, undefined); // Error: `foo` and `bar` are missing.
                              ^^^^^^^^^ [1]

References:
   create_element.js:14:19
   14| function B(props: {foo: number, bar: number}) { return null }
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------ create_element.js:30:24

Cannot call `React.createElement` because property `bar` is missing in props [1] but exists in object type [2].
[prop-missing]

   create_element.js:30:24
   30| React.createElement(A, null); // Error: `foo` and `bar` are missing.
                              ^^^^ [1]

References:
   create_element.js:13:33
   13| class A extends React.Component<{foo: number, bar: number}> {}
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------ create_element.js:30:24

Cannot call `React.createElement` because property `foo` is missing in props [1] but exists in object type [2].
[prop-missing]

   create_element.js:30:24
   30| React.createElement(A, null); // Error: `foo` and `bar` are missing.
                              ^^^^ [1]

References:
   create_element.js:13:33
   13| class A extends React.Component<{foo: number, bar: number}> {}
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------ create_element.js:31:24

Cannot call `React.createElement` because property `bar` is missing in props [1] but exists in object type [2].
[prop-missing]

   create_element.js:31:24
   31| React.createElement(B, null); // Error: `foo` and `bar` are missing.
                              ^^^^ [1]

References:
   create_element.js:14:19
   14| function B(props: {foo: number, bar: number}) { return null }
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------ create_element.js:31:24

Cannot call `React.createElement` because property `foo` is missing in props [1] but exists in object type [2].
[prop-missing]

   create_element.js:31:24
   31| React.createElement(B, null); // Error: `foo` and `bar` are missing.
                              ^^^^ [1]

References:
   create_element.js:14:19
   14| function B(props: {foo: number, bar: number}) { return null }
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------- create_element.js:36:2

Cannot cast `React.createElement(...).props.foo` to boolean because number [1] is incompatible with boolean [2].
[incompatible-cast]

   create_element.js:36:2
   36| (React.createElement(A, {foo: 1, bar: 2}).props.foo: boolean); // Error: `foo`
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

References:
   create_element.js:13:39
   13| class A extends React.Component<{foo: number, bar: number}> {}
                                             ^^^^^^ [1]
   create_element.js:36:54
   36| (React.createElement(A, {foo: 1, bar: 2}).props.foo: boolean); // Error: `foo`
                                                            ^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------- create_element.js:38:2

Cannot cast `React.createElement(...).props.foo` to boolean because number [1] is incompatible with boolean [2].
[incompatible-cast]

   create_element.js:38:2
   38| (React.createElement(B, {foo: 1, bar: 2}).props.foo: boolean); // Error: `foo`
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

References:
   create_element.js:14:25
   14| function B(props: {foo: number, bar: number}) { return null }
                               ^^^^^^ [1]
   create_element.js:38:54
   38| (React.createElement(B, {foo: 1, bar: 2}).props.foo: boolean); // Error: `foo`
                                                            ^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------ create_element.js:40:42

Cannot get `React.createElement(...).nope` because property `nope` is missing in `React.Element` [1]. [prop-missing]

   create_element.js:40:42
   40| React.createElement(A, {foo: 1, bar: 2}).nope; // Error: `nope` does not exist.
                                                ^^^^

References:
   create_element.js:40:1
   40| React.createElement(A, {foo: 1, bar: 2}).nope; // Error: `nope` does not exist.
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]


Error ------------------------------------------------------------------------------------------ create_element.js:41:42

Cannot get `React.createElement(...).nope` because property `nope` is missing in `React.Element` [1]. [prop-missing]

   create_element.js:41:42
   41| React.createElement(B, {foo: 1, bar: 2}).nope; // Error: `nope` does not exist.
                                                ^^^^

References:
   create_element.js:41:1
   41| React.createElement(B, {foo: 1, bar: 2}).nope; // Error: `nope` does not exist.
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]


Error ------------------------------------------------------------------------------------------- create_element.js:42:7

Cannot call `React.createElement` because property `bar` is missing in props [1] but exists in object type [2].
[prop-missing]

   create_element.js:42:7
   42| React.createElement(A); // Error: Missing `foo` and `bar`.
             ^^^^^^^^^^^^^

References:
   create_element.js:42:1
   42| React.createElement(A); // Error: Missing `foo` and `bar`.
       ^^^^^^^^^^^^^^^^^^^^^^ [1]
   create_element.js:13:33
   13| class A extends React.Component<{foo: number, bar: number}> {}
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------- create_element.js:42:7

Cannot call `React.createElement` because property `foo` is missing in props [1] but exists in object type [2].
[prop-missing]

   create_element.js:42:7
   42| React.createElement(A); // Error: Missing `foo` and `bar`.
             ^^^^^^^^^^^^^

References:
   create_element.js:42:1
   42| React.createElement(A); // Error: Missing `foo` and `bar`.
       ^^^^^^^^^^^^^^^^^^^^^^ [1]
   create_element.js:13:33
   13| class A extends React.Component<{foo: number, bar: number}> {}
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------- create_element.js:43:7

Cannot call `React.createElement` because property `bar` is missing in props [1] but exists in object type [2].
[prop-missing]

   create_element.js:43:7
   43| React.createElement(B); // Error: Missing `foo` and `bar`.
             ^^^^^^^^^^^^^

References:
   create_element.js:43:1
   43| React.createElement(B); // Error: Missing `foo` and `bar`.
       ^^^^^^^^^^^^^^^^^^^^^^ [1]
   create_element.js:14:19
   14| function B(props: {foo: number, bar: number}) { return null }
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------- create_element.js:43:7

Cannot call `React.createElement` because property `foo` is missing in props [1] but exists in object type [2].
[prop-missing]

   create_element.js:43:7
   43| React.createElement(B); // Error: Missing `foo` and `bar`.
             ^^^^^^^^^^^^^

References:
   create_element.js:43:1
   43| React.createElement(B); // Error: Missing `foo` and `bar`.
       ^^^^^^^^^^^^^^^^^^^^^^ [1]
   create_element.js:14:19
   14| function B(props: {foo: number, bar: number}) { return null }
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------- create_element.js:55:8

Cannot call `React.createElement` because string [1] is incompatible with number [2] in property `bar`.
[incompatible-call]

   create_element.js:55:8
   55|   bar: 'Hello, world!', // Error: `bar` is a string.
              ^^^^^^^^^^^^^^^ [1]

References:
   create_element.js:45:52
   45| class C extends React.Component<{foo: number, bar: number}> {
                                                          ^^^^^^ [2]


Error ------------------------------------------------------------------------------------------- create_element.js:59:8

Cannot call `React.createElement` because string [1] is incompatible with number [2] in property `bar`.
[incompatible-call]

   create_element.js:59:8
   59|   bar: 'Hello, world!', // Error: `bar` is a string.
              ^^^^^^^^^^^^^^^ [1]

References:
   create_element.js:48:38
   48| function D(props: {foo: number, bar: number}) { return null }
                                            ^^^^^^ [2]


Error ------------------------------------------------------------------------------------------ create_element.js:69:24

Cannot call `React.createElement` because property `children` is missing in props [1] but exists in object type [2].
[prop-missing]

   create_element.js:69:24
   69| React.createElement(E, {}); // Error
                              ^^ [1]

References:
   create_element.js:68:33
   68| class E extends React.Component<{children: number}> {}
                                       ^^^^^^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------ create_element.js:70:24

Cannot call `React.createElement` because property `children` is missing in props [1] but exists in object type [2].
[prop-missing]

   create_element.js:70:24
   70| React.createElement(E, undefined); // Error
                              ^^^^^^^^^ [1]

References:
   create_element.js:68:33
   68| class E extends React.Component<{children: number}> {}
                                       ^^^^^^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------ create_element.js:71:24

Cannot call `React.createElement` because property `children` is missing in props [1] but exists in object type [2].
[prop-missing]

   create_element.js:71:24
   71| React.createElement(E, null); // Error
                              ^^^^ [1]

References:
   create_element.js:68:33
   68| class E extends React.Component<{children: number}> {}
                                       ^^^^^^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------ create_element.js:75:24

Cannot call `React.createElement` because children array [1] is incompatible with number [2] in property `children`.
[incompatible-call]

   create_element.js:75:24
   75| React.createElement(E, {}, 1, 2); // Error
                              ^^

References:
   create_element.js:75:1
   75| React.createElement(E, {}, 1, 2); // Error
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]
   create_element.js:68:44
   68| class E extends React.Component<{children: number}> {}
                                                  ^^^^^^ [2]


Error ------------------------------------------------------------------------------------------ create_element.js:76:24

Cannot call `React.createElement` because children array [1] is incompatible with number [2] in property `children`.
[incompatible-call]

   create_element.js:76:24
   76| React.createElement(E, undefined, 1, 2); // Error
                              ^^^^^^^^^

References:
   create_element.js:76:1
   76| React.createElement(E, undefined, 1, 2); // Error
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]
   create_element.js:68:44
   68| class E extends React.Component<{children: number}> {}
                                                  ^^^^^^ [2]


Error ------------------------------------------------------------------------------------------ create_element.js:77:24

Cannot call `React.createElement` because children array [1] is incompatible with number [2] in property `children`.
[incompatible-call]

   create_element.js:77:24
   77| React.createElement(E, null, 1, 2); // Error
                              ^^^^

References:
   create_element.js:77:1
   77| React.createElement(E, null, 1, 2); // Error
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]
   create_element.js:68:44
   68| class E extends React.Component<{children: number}> {}
                                                  ^^^^^^ [2]


Error ------------------------------------------------------------------------------------------ create_element.js:78:24

Cannot call `React.createElement` because children array [1] is incompatible with number [2] in property `children`.
[incompatible-call]

   create_element.js:78:24
   78| React.createElement(E, {}, 1, 2, 3); // Error
                              ^^

References:
   create_element.js:78:1
   78| React.createElement(E, {}, 1, 2, 3); // Error
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]
   create_element.js:68:44
   68| class E extends React.Component<{children: number}> {}
                                                  ^^^^^^ [2]


Error ------------------------------------------------------------------------------------------ create_element.js:79:24

Cannot call `React.createElement` because array literal [1] is incompatible with number [2] in property `children`.
[incompatible-call]

   create_element.js:79:24
   79| React.createElement(E, {}, [1, 2]); // Error
                              ^^

References:
   create_element.js:79:28
   79| React.createElement(E, {}, [1, 2]); // Error
                                  ^^^^^^ [1]
   create_element.js:68:44
   68| class E extends React.Component<{children: number}> {}
                                                  ^^^^^^ [2]


Error ------------------------------------------------------------------------------------------ create_element.js:80:24

Cannot call `React.createElement` because children array [1] is incompatible with number [2] in property `children`.
[incompatible-call]

   create_element.js:80:24
   80| React.createElement(E, {}, [1, 2], [3, 4]); // Error
                              ^^

References:
   create_element.js:80:1
   80| React.createElement(E, {}, [1, 2], [3, 4]); // Error
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]
   create_element.js:68:44
   68| class E extends React.Component<{children: number}> {}
                                                  ^^^^^^ [2]


Error ------------------------------------------------------------------------------------------ create_element.js:81:24

Cannot call `React.createElement` because property `children` is missing in props [1] but exists in object type [2].
[prop-missing]

   create_element.js:81:24
   81| React.createElement(E, {}, ...[]); // Error
                              ^^ [1]

References:
   create_element.js:68:33
   68| class E extends React.Component<{children: number}> {}
                                       ^^^^^^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------ create_element.js:83:24

Cannot call `React.createElement` because children array [1] is incompatible with number [2] in property `children`.
[incompatible-call]

   create_element.js:83:24
   83| React.createElement(E, {}, ...[1, 2]); // Error
                              ^^

References:
   create_element.js:83:1
   83| React.createElement(E, {}, ...[1, 2]); // Error
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]
   create_element.js:68:44
   68| class E extends React.Component<{children: number}> {}
                                                  ^^^^^^ [2]


Error ------------------------------------------------------------------------------------------ create_element.js:84:24

Cannot call `React.createElement` because children array or array [1] is incompatible with number [2] in property
`children`. [incompatible-call]

   create_element.js:84:24
   84| React.createElement(E, {}, ...(any: Array<number>)); // Error
                              ^^

References:
   create_element.js:84:1
   84| React.createElement(E, {}, ...(any: Array<number>)); // Error
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]
   create_element.js:68:44
   68| class E extends React.Component<{children: number}> {}
                                                  ^^^^^^ [2]


Error ------------------------------------------------------------------------------------------ create_element.js:84:24

Cannot call `React.createElement` because undefined [1] is incompatible with number [2] in property `children`.
[incompatible-call]

   create_element.js:84:24
   84| React.createElement(E, {}, ...(any: Array<number>)); // Error
                              ^^

References:
   create_element.js:84:1
   84| React.createElement(E, {}, ...(any: Array<number>)); // Error
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]
   create_element.js:68:44
   68| class E extends React.Component<{children: number}> {}
                                                  ^^^^^^ [2]


Error ------------------------------------------------------------------------------------------ create_element.js:86:24

Cannot call `React.createElement` because children array [1] is incompatible with number [2] in property `children`.
[incompatible-call]

   create_element.js:86:24
   86| React.createElement(E, {}, 1, ...[2]); // Error
                              ^^

References:
   create_element.js:86:1
   86| React.createElement(E, {}, 1, ...[2]); // Error
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]
   create_element.js:68:44
   68| class E extends React.Component<{children: number}> {}
                                                  ^^^^^^ [2]


Error ------------------------------------------------------------------------------------------ create_element.js:87:24

Cannot call `React.createElement` because children array or number [1] is incompatible with number [2] in property
`children`. [incompatible-call]

   create_element.js:87:24
   87| React.createElement(E, {}, 1, ...(any: Array<number>)); // Error
                              ^^

References:
   create_element.js:87:1
   87| React.createElement(E, {}, 1, ...(any: Array<number>)); // Error
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]
   create_element.js:68:44
   68| class E extends React.Component<{children: number}> {}
                                                  ^^^^^^ [2]


Error ------------------------------------------------------------------------------------------ create_element.js:90:24

Cannot call `React.createElement` because property `children` is missing in props [1] but exists in object type [2].
[prop-missing]

   create_element.js:90:24
   90| React.createElement(F, {}); // Error
                              ^^ [1]

References:
   create_element.js:89:33
   89| class F extends React.Component<{children: Array<number>}> {}
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------ create_element.js:91:24

Cannot call `React.createElement` because property `children` is missing in props [1] but exists in object type [2].
[prop-missing]

   create_element.js:91:24
   91| React.createElement(F, undefined); // Error
                              ^^^^^^^^^ [1]

References:
   create_element.js:89:33
   89| class F extends React.Component<{children: Array<number>}> {}
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------ create_element.js:92:24

Cannot call `React.createElement` because property `children` is missing in props [1] but exists in object type [2].
[prop-missing]

   create_element.js:92:24
   92| React.createElement(F, null); // Error
                              ^^^^ [1]

References:
   create_element.js:89:33
   89| class F extends React.Component<{children: Array<number>}> {}
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------ create_element.js:93:24

Cannot call `React.createElement` because number [1] is incompatible with array type [2] in property `children`.
[incompatible-call]

   create_element.js:93:24
   93| React.createElement(F, {}, 1); // Error
                              ^^

References:
   create_element.js:93:28
   93| React.createElement(F, {}, 1); // Error
                                  ^ [1]
   create_element.js:89:44
   89| class F extends React.Component<{children: Array<number>}> {}
                                                  ^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------ create_element.js:94:24

Cannot call `React.createElement` because number [1] is incompatible with array type [2] in property `children`.
[incompatible-call]

   create_element.js:94:24
   94| React.createElement(F, undefined, 1); // Error
                              ^^^^^^^^^

References:
   create_element.js:94:35
   94| React.createElement(F, undefined, 1); // Error
                                         ^ [1]
   create_element.js:89:44
   89| class F extends React.Component<{children: Array<number>}> {}
                                                  ^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------ create_element.js:95:24

Cannot call `React.createElement` because number [1] is incompatible with array type [2] in property `children`.
[incompatible-call]

   create_element.js:95:24
   95| React.createElement(F, null, 1); // Error
                              ^^^^

References:
   create_element.js:95:30
   95| React.createElement(F, null, 1); // Error
                                    ^ [1]
   create_element.js:89:44
   89| class F extends React.Component<{children: Array<number>}> {}
                                                  ^^^^^^^^^^^^^ [2]


Error ----------------------------------------------------------------------------------------- create_element.js:101:24

Cannot call `React.createElement` because array literal [1] is incompatible with number [2] in array element of property
`children`. [incompatible-call]

   create_element.js:101:24
   101| React.createElement(F, {}, [1, 2], [3, 4]); // Error
                               ^^

References:
   create_element.js:101:28
   101| React.createElement(F, {}, [1, 2], [3, 4]); // Error
                                   ^^^^^^ [1]
   create_element.js:89:50
    89| class F extends React.Component<{children: Array<number>}> {}
                                                         ^^^^^^ [2]


Error ----------------------------------------------------------------------------------------- create_element.js:101:24

Cannot call `React.createElement` because array literal [1] is incompatible with number [2] in array element of property
`children`. [incompatible-call]

   create_element.js:101:24
   101| React.createElement(F, {}, [1, 2], [3, 4]); // Error
                               ^^

References:
   create_element.js:101:36
   101| React.createElement(F, {}, [1, 2], [3, 4]); // Error
                                           ^^^^^^ [1]
   create_element.js:89:50
    89| class F extends React.Component<{children: Array<number>}> {}
                                                         ^^^^^^ [2]


Error ----------------------------------------------------------------------------------------- create_element.js:102:24

Cannot call `React.createElement` because property `children` is missing in props [1] but exists in object type [2].
[prop-missing]

   create_element.js:102:24
   102| React.createElement(F, {}, ...[]); // Error
                               ^^ [1]

References:
   create_element.js:89:33
    89| class F extends React.Component<{children: Array<number>}> {}
                                        ^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error ----------------------------------------------------------------------------------------- create_element.js:103:24

Cannot call `React.createElement` because number [1] is incompatible with array type [2] in property `children`.
[incompatible-call]

   create_element.js:103:24
   103| React.createElement(F, {}, ...[1]); // Error
                               ^^

References:
   create_element.js:103:32
   103| React.createElement(F, {}, ...[1]); // Error
                                       ^ [1]
   create_element.js:89:44
    89| class F extends React.Component<{children: Array<number>}> {}
                                                   ^^^^^^^^^^^^^ [2]


Error ----------------------------------------------------------------------------------------- create_element.js:105:24

Cannot call `React.createElement` because number [1] is incompatible with array type [2] in property `children`.
[incompatible-call]

   create_element.js:105:24
   105| React.createElement(F, {}, ...(any: Array<number>)); // Error
                               ^^

References:
   create_element.js:89:50
    89| class F extends React.Component<{children: Array<number>}> {}
                                                         ^^^^^^ [1]
   create_element.js:89:44
    89| class F extends React.Component<{children: Array<number>}> {}
                                                   ^^^^^^^^^^^^^ [2]


Error ----------------------------------------------------------------------------------------- create_element.js:105:24

Cannot call `React.createElement` because undefined [1] is incompatible with array type [2] in property `children`.
[incompatible-call]

   create_element.js:105:24
   105| React.createElement(F, {}, ...(any: Array<number>)); // Error
                               ^^

References:
   create_element.js:105:1
   105| React.createElement(F, {}, ...(any: Array<number>)); // Error
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]
   create_element.js:89:44
    89| class F extends React.Component<{children: Array<number>}> {}
                                                   ^^^^^^^^^^^^^ [2]


Error ----------------------------------------------------------------------------------------- create_element.js:105:24

Cannot call `React.createElement` because number [1] is incompatible with array type [2] in property `children`.
[incompatible-call]

   create_element.js:105:24
   105| React.createElement(F, {}, ...(any: Array<number>)); // Error
                               ^^

References:
   create_element.js:105:43
   105| React.createElement(F, {}, ...(any: Array<number>)); // Error
                                                  ^^^^^^ [1]
   create_element.js:89:44
    89| class F extends React.Component<{children: Array<number>}> {}
                                                   ^^^^^^^^^^^^^ [2]


Error ----------------------------------------------------------------------------------------- create_element.js:106:24

Cannot call `React.createElement` because number [1] is incompatible with array type [2] in property `children`.
[incompatible-call]

   create_element.js:106:24
   106| React.createElement(F, {}, 1, ...[]); // Error
                               ^^

References:
   create_element.js:106:28
   106| React.createElement(F, {}, 1, ...[]); // Error
                                   ^ [1]
   create_element.js:89:44
    89| class F extends React.Component<{children: Array<number>}> {}
                                                   ^^^^^^^^^^^^^ [2]


Error ----------------------------------------------------------------------------------------- create_element.js:108:24

Cannot call `React.createElement` because number [1] is incompatible with array type [2] in property `children`.
[incompatible-call]

   create_element.js:108:24
   108| React.createElement(F, {}, 1, ...(any: Array<number>)); // Error
                               ^^

References:
   create_element.js:108:28
   108| React.createElement(F, {}, 1, ...(any: Array<number>)); // Error
                                   ^ [1]
   create_element.js:89:44
    89| class F extends React.Component<{children: Array<number>}> {}
                                                   ^^^^^^^^^^^^^ [2]


Error ----------------------------------------------------------------------------------------- create_element.js:111:24

Cannot call `React.createElement` because property `children` is missing in props [1] but exists in object type [2].
[prop-missing]

   create_element.js:111:24
   111| React.createElement(G, {}); // Error
                               ^^ [1]

References:
   create_element.js:110:33
   110| class G extends React.Component<{children: number | Array<number>}> {}
                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error ----------------------------------------------------------------------------------------- create_element.js:116:24

Cannot call `React.createElement` because in property `children`: [incompatible-call]
 - Either array literal [1] is incompatible with number [2] in array element.
 - Or children array [3] is incompatible with number [4].

   create_element.js:116:24
   116| React.createElement(G, {}, [1, 2], [3, 4]); // Error
                               ^^

References:
   create_element.js:116:28
   116| React.createElement(G, {}, [1, 2], [3, 4]); // Error
                                   ^^^^^^ [1]
   create_element.js:110:59
   110| class G extends React.Component<{children: number | Array<number>}> {}
                                                                  ^^^^^^ [2]
   create_element.js:116:1
   116| React.createElement(G, {}, [1, 2], [3, 4]); // Error
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [3]
   create_element.js:110:44
   110| class G extends React.Component<{children: number | Array<number>}> {}
                                                   ^^^^^^ [4]


Error ----------------------------------------------------------------------------------------- create_element.js:117:24

Cannot call `React.createElement` because property `children` is missing in props [1] but exists in object type [2].
[prop-missing]

   create_element.js:117:24
   117| React.createElement(G, {}, ...[]); // Error
                               ^^ [1]

References:
   create_element.js:110:33
   110| class G extends React.Component<{children: number | Array<number>}> {}
                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error ----------------------------------------------------------------------------------------- create_element.js:120:24

Cannot call `React.createElement` because in property `children`: [incompatible-call]
 - Either undefined [1] is incompatible with number [2].
 - Or undefined [1] is incompatible with array type [3].

   create_element.js:120:24
   120| React.createElement(G, {}, ...(any: Array<number>)); // Error
                               ^^

References:
   create_element.js:120:1
   120| React.createElement(G, {}, ...(any: Array<number>)); // Error
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]
   create_element.js:110:44
   110| class G extends React.Component<{children: number | Array<number>}> {}
                                                   ^^^^^^ [2]
   create_element.js:110:53
   110| class G extends React.Component<{children: number | Array<number>}> {}
                                                            ^^^^^^^^^^^^^ [3]


Error ----------------------------------------------------------------------------------------- create_element.js:131:25

Cannot call `React.createElement` because in property `children`: [incompatible-call]
 - Either array literal [1] is incompatible with number [2] in array element.
 - Or children array [3] is incompatible with number [4].

   create_element.js:131:25
   131| React.createElement(G2, {}, [1, 2], [3, 4]); // Error
                                ^^

References:
   create_element.js:131:29
   131| React.createElement(G2, {}, [1, 2], [3, 4]); // Error
                                    ^^^^^^ [1]
   create_element.js:125:61
   125| class G2 extends React.Component<{children?: number | Array<number>}> {}
                                                                    ^^^^^^ [2]
   create_element.js:131:1
   131| React.createElement(G2, {}, [1, 2], [3, 4]); // Error
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [3]
   create_element.js:125:46
   125| class G2 extends React.Component<{children?: number | Array<number>}> {}
                                                     ^^^^^^ [4]


Error ----------------------------------------------------------------------------------------- create_element.js:142:24

Cannot call `React.createElement` because property `children` is missing in props [1] but exists in object type [2].
[prop-missing]

   create_element.js:142:24
   142| React.createElement(H, {}); // Error
                               ^^ [1]

References:
   create_element.js:141:33
   141| class H extends React.Component<{children: NumberArrayRecursive}> {}
                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error ----------------------------------------------------------------------------------------- create_element.js:148:24

Cannot call `React.createElement` because property `children` is missing in props [1] but exists in object type [2].
[prop-missing]

   create_element.js:148:24
   148| React.createElement(H, {}, ...[]); // Error
                               ^^ [1]

References:
   create_element.js:141:33
   141| class H extends React.Component<{children: NumberArrayRecursive}> {}
                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error ----------------------------------------------------------------------------------------- create_element.js:151:24

Cannot call `React.createElement` because in property `children`: [incompatible-call]
 - Either undefined [1] is incompatible with number [2].
 - Or undefined [1] is incompatible with array type [3].

   create_element.js:151:24
   151| React.createElement(H, {}, ...(any: Array<number>)); // Error
                               ^^

References:
   create_element.js:151:1
   151| React.createElement(H, {}, ...(any: Array<number>)); // Error
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]
   create_element.js:140:29
   140| type NumberArrayRecursive = number | Array<NumberArrayRecursive>;
                                    ^^^^^^ [2]
   create_element.js:140:38
   140| type NumberArrayRecursive = number | Array<NumberArrayRecursive>;
                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^ [3]


Error ----------------------------------------------------------------------------------------- create_element.js:159:24

Cannot call `React.createElement` because null [1] is incompatible with number [2] in property `children`.
[incompatible-call]

   create_element.js:159:24
   159| React.createElement(I, {}, null); // Error
                               ^^

References:
   create_element.js:159:28
   159| React.createElement(I, {}, null); // Error
                                   ^^^^ [1]
   create_element.js:156:45
   156| class I extends React.Component<{children?: number}> {}
                                                    ^^^^^^ [2]


Error ----------------------------------------------------------------------------------------- create_element.js:161:24

Cannot call `React.createElement` because children array [1] is incompatible with number [2] in property `children`.
[incompatible-call]

   create_element.js:161:24
   161| React.createElement(I, {}, 1, 2); // Error
                               ^^

References:
   create_element.js:161:1
   161| React.createElement(I, {}, 1, 2); // Error
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]
   create_element.js:156:45
   156| class I extends React.Component<{children?: number}> {}
                                                    ^^^^^^ [2]


Error ----------------------------------------------------------------------------------------- create_element.js:164:24

Cannot call `React.createElement` because children array [1] is incompatible with number [2] in property `children`.
[incompatible-call]

   create_element.js:164:24
   164| React.createElement(I, {}, ...[1, 2]); // Error
                               ^^

References:
   create_element.js:164:1
   164| React.createElement(I, {}, ...[1, 2]); // Error
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]
   create_element.js:156:45
   156| class I extends React.Component<{children?: number}> {}
                                                    ^^^^^^ [2]


Error ----------------------------------------------------------------------------------------- create_element.js:165:24

Cannot call `React.createElement` because children array or array [1] is incompatible with number [2] in property
`children`. [incompatible-call]

   create_element.js:165:24
   165| React.createElement(I, {}, ...(any: Array<number>)); // Error
                               ^^

References:
   create_element.js:165:1
   165| React.createElement(I, {}, ...(any: Array<number>)); // Error
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]
   create_element.js:156:45
   156| class I extends React.Component<{children?: number}> {}
                                                    ^^^^^^ [2]


Error ----------------------------------------------------------------------------------------- create_element.js:167:24

Cannot call `React.createElement` because children array [1] is incompatible with number [2] in property `children`.
[incompatible-call]

   create_element.js:167:24
   167| React.createElement(I, {}, 1, ...[2]); // Error
                               ^^

References:
   create_element.js:167:1
   167| React.createElement(I, {}, 1, ...[2]); // Error
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]
   create_element.js:156:45
   156| class I extends React.Component<{children?: number}> {}
                                                    ^^^^^^ [2]


Error ----------------------------------------------------------------------------------------- create_element.js:168:24

Cannot call `React.createElement` because children array or number [1] is incompatible with number [2] in property
`children`. [incompatible-call]

   create_element.js:168:24
   168| React.createElement(I, {}, 1, ...(any: Array<number>)); // Error
                               ^^

References:
   create_element.js:168:1
   168| React.createElement(I, {}, 1, ...(any: Array<number>)); // Error
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]
   create_element.js:156:45
   156| class I extends React.Component<{children?: number}> {}
                                                    ^^^^^^ [2]


Error ----------------------------------------------------------------------------------------- create_element.js:171:24

Cannot call `React.createElement` because property `children` is missing in props [1] but exists in object type [2].
[prop-missing]

   create_element.js:171:24
   171| React.createElement(J, {}); // Error
                               ^^ [1]

References:
   create_element.js:170:33
   170| class J extends React.Component<{children: ?number}> {}
                                        ^^^^^^^^^^^^^^^^^^^ [2]


Error ----------------------------------------------------------------------------------------- create_element.js:175:24

Cannot call `React.createElement` because children array [1] is incompatible with number [2] in property `children`.
[incompatible-call]

   create_element.js:175:24
   175| React.createElement(J, {}, 1, 2); // Error
                               ^^

References:
   create_element.js:175:1
   175| React.createElement(J, {}, 1, 2); // Error
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]
   create_element.js:170:45
   170| class J extends React.Component<{children: ?number}> {}
                                                    ^^^^^^ [2]


Error ----------------------------------------------------------------------------------------- create_element.js:176:24

Cannot call `React.createElement` because property `children` is missing in props [1] but exists in object type [2].
[prop-missing]

   create_element.js:176:24
   176| React.createElement(J, {}, ...[]); // Error
                               ^^ [1]

References:
   create_element.js:170:33
   170| class J extends React.Component<{children: ?number}> {}
                                        ^^^^^^^^^^^^^^^^^^^ [2]


Error ----------------------------------------------------------------------------------------- create_element.js:178:24

Cannot call `React.createElement` because children array [1] is incompatible with number [2] in property `children`.
[incompatible-call]

   create_element.js:178:24
   178| React.createElement(J, {}, ...[1, 2]); // Error
                               ^^

References:
   create_element.js:178:1
   178| React.createElement(J, {}, ...[1, 2]); // Error
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]
   create_element.js:170:45
   170| class J extends React.Component<{children: ?number}> {}
                                                    ^^^^^^ [2]


Error ----------------------------------------------------------------------------------------- create_element.js:179:24

Cannot call `React.createElement` because children array or array [1] is incompatible with number [2] in property
`children`. [incompatible-call]

   create_element.js:179:24
   179| React.createElement(J, {}, ...(any: Array<number>)); // Error
                               ^^

References:
   create_element.js:179:1
   179| React.createElement(J, {}, ...(any: Array<number>)); // Error
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]
   create_element.js:170:45
   170| class J extends React.Component<{children: ?number}> {}
                                                    ^^^^^^ [2]


Error ----------------------------------------------------------------------------------------- create_element.js:181:24

Cannot call `React.createElement` because children array [1] is incompatible with number [2] in property `children`.
[incompatible-call]

   create_element.js:181:24
   181| React.createElement(J, {}, 1, ...[2]); // Error
                               ^^

References:
   create_element.js:181:1
   181| React.createElement(J, {}, 1, ...[2]); // Error
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]
   create_element.js:170:45
   170| class J extends React.Component<{children: ?number}> {}
                                                    ^^^^^^ [2]


Error ----------------------------------------------------------------------------------------- create_element.js:182:24

Cannot call `React.createElement` because children array or number [1] is incompatible with number [2] in property
`children`. [incompatible-call]

   create_element.js:182:24
   182| React.createElement(J, {}, 1, ...(any: Array<number>)); // Error
                               ^^

References:
   create_element.js:182:1
   182| React.createElement(J, {}, 1, ...(any: Array<number>)); // Error
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]
   create_element.js:170:45
   170| class J extends React.Component<{children: ?number}> {}
                                                    ^^^^^^ [2]


Error ----------------------------------------------------------------------------------------- create_element.js:188:24

Cannot call `React.createElement` because string [1] is incompatible with number [2] in property `children`.
[incompatible-call]

   create_element.js:188:24
   188| React.createElement(K, {}, '42'); // Error
                               ^^

References:
   create_element.js:188:28
   188| React.createElement(K, {}, '42'); // Error
                                   ^^^^ [1]
   create_element.js:184:44
   184| class K extends React.Component<{children: number}> {}
                                                   ^^^^^^ [2]


Error ----------------------------------------------------------------------------------------- create_element.js:189:35

Cannot call `React.createElement` because string [1] is incompatible with number [2] in property `children`.
[incompatible-call]

   create_element.js:189:35
   189| React.createElement(K, {children: '42'}); // Error
                                          ^^^^ [1]

References:
   create_element.js:184:44
   184| class K extends React.Component<{children: number}> {}
                                                   ^^^^^^ [2]


Error ----------------------------------------------------------------------------------------- create_element.js:191:24

Cannot call `React.createElement` because string [1] is incompatible with number [2] in property `children`.
[incompatible-call]

   create_element.js:191:24
   191| React.createElement(K, {children: 42}, '42'); // Error
                               ^^^^^^^^^^^^^^

References:
   create_element.js:191:40
   191| React.createElement(K, {children: 42}, '42'); // Error
                                               ^^^^ [1]
   create_element.js:184:44
   184| class K extends React.Component<{children: number}> {}
                                                   ^^^^^^ [2]


Error ----------------------------------------------------------------------------------------- create_element.js:192:24

Cannot call `React.createElement` because string [1] is incompatible with number [2] in property `children`.
[incompatible-call]

   create_element.js:192:24
   192| React.createElement(K, {children: '42'}, '42'); // Error
                               ^^^^^^^^^^^^^^^^

References:
   create_element.js:192:42
   192| React.createElement(K, {children: '42'}, '42'); // Error
                                                 ^^^^ [1]
   create_element.js:184:44
   184| class K extends React.Component<{children: number}> {}
                                                   ^^^^^^ [2]


Error ----------------------------------------------------------------------------------------- create_element.js:205:24

Cannot call `React.createElement` because property `foo` is missing in props [1] but exists in object type [2].
[prop-missing]

   create_element.js:205:24
   205| React.createElement(L, {}, 1); // Error
                               ^^ [1]

References:
   create_element.js:194:33
                                        v
   194| class L extends React.Component<{
   195|   foo: number,
   196|   bar: number,
   197|   children: number,
   198| }> {
        ^ [2]


Error ----------------------------------------------------------------------------------------- create_element.js:206:24

Cannot call `React.createElement` because property `foo` is missing in props [1] but exists in object type [2].
[prop-missing]

   create_element.js:206:24
   206| React.createElement(L, {children: 1}); // Error
                               ^^^^^^^^^^^^^ [1]

References:
   create_element.js:194:33
                                        v
   194| class L extends React.Component<{
   195|   foo: number,
   196|   bar: number,
   197|   children: number,
   198| }> {
        ^ [2]


Error ----------------------------------------------------------------------------------------- create_element.js:207:24

Cannot call `React.createElement` because property `foo` is missing in props [1] but exists in object type [2].
[prop-missing]

   create_element.js:207:24
   207| React.createElement(L, {bar: 1}, 2); // Error
                               ^^^^^^^^ [1]

References:
   create_element.js:194:33
                                        v
   194| class L extends React.Component<{
   195|   foo: number,
   196|   bar: number,
   197|   children: number,
   198| }> {
        ^ [2]


Error ----------------------------------------------------------------------------------------- create_element.js:208:24

Cannot call `React.createElement` because property `foo` is missing in props [1] but exists in object type [2].
[prop-missing]

   create_element.js:208:24
   208| React.createElement(L, {bar: 1, children: 2}); // Error
                               ^^^^^^^^^^^^^^^^^^^^^ [1]

References:
   create_element.js:194:33
                                        v
   194| class L extends React.Component<{
   195|   foo: number,
   196|   bar: number,
   197|   children: number,
   198| }> {
        ^ [2]


Error ----------------------------------------------------------------------------------------- create_element.js:209:30

Cannot call `React.createElement` because string [1] is incompatible with number [2] in property `foo`.
[incompatible-call]

   create_element.js:209:30
   209| React.createElement(L, {foo: '1', bar: 2}, 3); // Error
                                     ^^^ [1]

References:
   create_element.js:195:8
   195|   foo: number,
               ^^^^^^ [2]


Error ----------------------------------------------------------------------------------------- create_element.js:210:30

Cannot call `React.createElement` because string [1] is incompatible with number [2] in property `foo`.
[incompatible-call]

   create_element.js:210:30
   210| React.createElement(L, {foo: '1', bar: 2, children: 3}); // Error
                                     ^^^ [1]

References:
   create_element.js:195:8
   195|   foo: number,
               ^^^^^^ [2]


Error ----------------------------------------------------------------------------------------- create_element.js:211:38

Cannot call `React.createElement` because string [1] is incompatible with number [2] in property `bar`.
[incompatible-call]

   create_element.js:211:38
   211| React.createElement(L, {foo: 1, bar: '2'}, 3); // Error
                                             ^^^ [1]

References:
   create_element.js:196:8
   196|   bar: number,
               ^^^^^^ [2]


Error ----------------------------------------------------------------------------------------- create_element.js:212:38

Cannot call `React.createElement` because string [1] is incompatible with number [2] in property `bar`.
[incompatible-call]

   create_element.js:212:38
   212| React.createElement(L, {foo: 1, bar: '2', children: 3}); // Error
                                             ^^^ [1]

References:
   create_element.js:196:8
   196|   bar: number,
               ^^^^^^ [2]


Error ----------------------------------------------------------------------------------------- create_element.js:213:24

Cannot call `React.createElement` because string [1] is incompatible with number [2] in property `children`.
[incompatible-call]

   create_element.js:213:24
   213| React.createElement(L, {foo: 1, bar: 2}, '3'); // Error
                               ^^^^^^^^^^^^^^^^

References:
   create_element.js:213:42
   213| React.createElement(L, {foo: 1, bar: 2}, '3'); // Error
                                                 ^^^ [1]
   create_element.js:197:13
   197|   children: number,
                    ^^^^^^ [2]


Error ----------------------------------------------------------------------------------------- create_element.js:214:51

Cannot call `React.createElement` because string [1] is incompatible with number [2] in property `children`.
[incompatible-call]

   create_element.js:214:51
   214| React.createElement(L, {foo: 1, bar: 2, children: '3'}); // Error
                                                          ^^^ [1]

References:
   create_element.js:197:13
   197|   children: number,
                    ^^^^^^ [2]


Error ------------------------------------------------------------------------------------------ create_element.js:219:2

Cannot cast `React.createElement(...).type` to `typeof N` because `M` [1] is incompatible with `N` [2].
[incompatible-cast]

   create_element.js:219:2
   219| (React.createElement(M).type: typeof N); // Error
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^

References:
   create_element.js:216:7
   216| class M extends React.Component<{}> {}
              ^ [1]
   create_element.js:217:7
   217| class N extends React.Component<{}> {}
              ^ [2]


Error ----------------------------------------------------------------------------------------- create_element.js:223:24

Cannot call `React.createElement` because children array [1] has an unknown number of elements, so is incompatible with
tuple type [2] in property `children`. [invalid-tuple-arity]

   create_element.js:223:24
   223| React.createElement(P, null, 1, 2, ...(any: Array<number>)); // ERROR
                               ^^^^

References:
   create_element.js:223:1
   223| React.createElement(P, null, 1, 2, ...(any: Array<number>)); // ERROR
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]
   create_element.js:221:31
   221| declare function P({children: [1, 2]}): void;
                                      ^^^^^^ [2]


Error ------------------------------------------------------------------------------------------- create_factory.js:20:8

Cannot call `aFactory` because string [1] is incompatible with number [2] in property `bar`. [incompatible-call]

   create_factory.js:20:8
   20|   bar: 'Hello, world!', // Error: `bar` is a string.
              ^^^^^^^^^^^^^^^ [1]

References:
   create_factory.js:10:52
   10| class A extends React.Component<{foo: number, bar: number}, void> {}
                                                          ^^^^^^ [2]


Error ------------------------------------------------------------------------------------------- create_factory.js:24:8

Cannot call `bFactory` because string [1] is incompatible with number [2] in property `bar`. [incompatible-call]

   create_factory.js:24:8
   24|   bar: 'Hello, world!', // Error: `bar` is a string.
              ^^^^^^^^^^^^^^^ [1]

References:
   create_factory.js:11:38
   11| function B(props: {foo: number, bar: number}) { return null }
                                            ^^^^^^ [2]


Error ------------------------------------------------------------------------------------------ create_factory.js:26:10

Cannot call `aFactory` because property `bar` is missing in props [1] but exists in object type [2]. [prop-missing]

   create_factory.js:26:10
   26| aFactory({foo: 42}); // Error: `bar` is missing.
                ^^^^^^^^^ [1]

References:
   create_factory.js:10:33
   10| class A extends React.Component<{foo: number, bar: number}, void> {}
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------ create_factory.js:27:10

Cannot call `bFactory` because property `bar` is missing in props [1] but exists in object type [2]. [prop-missing]

   create_factory.js:27:10
   27| bFactory({foo: 42}); // Error: `bar` is missing.
                ^^^^^^^^^ [1]

References:
   create_factory.js:11:19
   11| function B(props: {foo: number, bar: number}) { return null }
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------ create_factory.js:28:10

Cannot call `aFactory` because property `bar` is missing in props [1] but exists in object type [2]. [prop-missing]

   create_factory.js:28:10
   28| aFactory(undefined); // Error: `foo` and `bar` are missing.
                ^^^^^^^^^ [1]

References:
   create_factory.js:10:33
   10| class A extends React.Component<{foo: number, bar: number}, void> {}
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------ create_factory.js:28:10

Cannot call `aFactory` because property `foo` is missing in props [1] but exists in object type [2]. [prop-missing]

   create_factory.js:28:10
   28| aFactory(undefined); // Error: `foo` and `bar` are missing.
                ^^^^^^^^^ [1]

References:
   create_factory.js:10:33
   10| class A extends React.Component<{foo: number, bar: number}, void> {}
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------ create_factory.js:29:10

Cannot call `bFactory` because property `bar` is missing in props [1] but exists in object type [2]. [prop-missing]

   create_factory.js:29:10
   29| bFactory(undefined); // Error: `foo` and `bar` are missing.
                ^^^^^^^^^ [1]

References:
   create_factory.js:11:19
   11| function B(props: {foo: number, bar: number}) { return null }
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------ create_factory.js:29:10

Cannot call `bFactory` because property `foo` is missing in props [1] but exists in object type [2]. [prop-missing]

   create_factory.js:29:10
   29| bFactory(undefined); // Error: `foo` and `bar` are missing.
                ^^^^^^^^^ [1]

References:
   create_factory.js:11:19
   11| function B(props: {foo: number, bar: number}) { return null }
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------ create_factory.js:30:10

Cannot call `aFactory` because property `bar` is missing in props [1] but exists in object type [2]. [prop-missing]

   create_factory.js:30:10
   30| aFactory(null); // Error: `foo` and `bar` are missing.
                ^^^^ [1]

References:
   create_factory.js:10:33
   10| class A extends React.Component<{foo: number, bar: number}, void> {}
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------ create_factory.js:30:10

Cannot call `aFactory` because property `foo` is missing in props [1] but exists in object type [2]. [prop-missing]

   create_factory.js:30:10
   30| aFactory(null); // Error: `foo` and `bar` are missing.
                ^^^^ [1]

References:
   create_factory.js:10:33
   10| class A extends React.Component<{foo: number, bar: number}, void> {}
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------ create_factory.js:31:10

Cannot call `bFactory` because property `bar` is missing in props [1] but exists in object type [2]. [prop-missing]

   create_factory.js:31:10
   31| bFactory(null); // Error: `foo` and `bar` are missing.
                ^^^^ [1]

References:
   create_factory.js:11:19
   11| function B(props: {foo: number, bar: number}) { return null }
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------ create_factory.js:31:10

Cannot call `bFactory` because property `foo` is missing in props [1] but exists in object type [2]. [prop-missing]

   create_factory.js:31:10
   31| bFactory(null); // Error: `foo` and `bar` are missing.
                ^^^^ [1]

References:
   create_factory.js:11:19
   11| function B(props: {foo: number, bar: number}) { return null }
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------- create_factory.js:36:2

Cannot cast `aFactory(...).props.foo` to boolean because number [1] is incompatible with boolean [2].
[incompatible-cast]

   create_factory.js:36:2
   36| (aFactory({foo: 1, bar: 2}).props.foo: boolean); // Error: `foo` is `number`.
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

References:
   create_factory.js:10:39
   10| class A extends React.Component<{foo: number, bar: number}, void> {}
                                             ^^^^^^ [1]
   create_factory.js:36:40
   36| (aFactory({foo: 1, bar: 2}).props.foo: boolean); // Error: `foo` is `number`.
                                              ^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------- create_factory.js:37:2

Cannot cast `bFactory(...).props.foo` to boolean because number [1] is incompatible with boolean [2].
[incompatible-cast]

   create_factory.js:37:2
   37| (bFactory({foo: 1, bar: 2}).props.foo: boolean); // Error: `foo` is `number`.
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

References:
   create_factory.js:11:25
   11| function B(props: {foo: number, bar: number}) { return null }
                               ^^^^^^ [1]
   create_factory.js:37:40
   37| (bFactory({foo: 1, bar: 2}).props.foo: boolean); // Error: `foo` is `number`.
                                              ^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------ create_factory.js:38:28

Cannot get `aFactory(...).nope` because property `nope` is missing in `React.Element` [1]. [prop-missing]

   create_factory.js:38:28
   38| aFactory({foo: 1, bar: 2}).nope; // Error: `nope` does not exist.
                                  ^^^^

References:
   create_factory.js:38:1
   38| aFactory({foo: 1, bar: 2}).nope; // Error: `nope` does not exist.
       ^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]


Error ------------------------------------------------------------------------------------------ create_factory.js:39:28

Cannot get `bFactory(...).nope` because property `nope` is missing in `React.Element` [1]. [prop-missing]

   create_factory.js:39:28
   39| bFactory({foo: 1, bar: 2}).nope; // Error: `nope` does not exist.
                                  ^^^^

References:
   create_factory.js:39:1
   39| bFactory({foo: 1, bar: 2}).nope; // Error: `nope` does not exist.
       ^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]


Error ------------------------------------------------------------------------------------------- create_factory.js:40:1

Cannot call `aFactory` because property `bar` is missing in props [1] but exists in object type [2]. [prop-missing]

   create_factory.js:40:1
   40| aFactory(); // Error: Missing `foo` and `bar`.
       ^^^^^^^^

References:
   create_factory.js:40:1
   40| aFactory(); // Error: Missing `foo` and `bar`.
       ^^^^^^^^^^ [1]
   create_factory.js:10:33
   10| class A extends React.Component<{foo: number, bar: number}, void> {}
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------- create_factory.js:40:1

Cannot call `aFactory` because property `foo` is missing in props [1] but exists in object type [2]. [prop-missing]

   create_factory.js:40:1
   40| aFactory(); // Error: Missing `foo` and `bar`.
       ^^^^^^^^

References:
   create_factory.js:40:1
   40| aFactory(); // Error: Missing `foo` and `bar`.
       ^^^^^^^^^^ [1]
   create_factory.js:10:33
   10| class A extends React.Component<{foo: number, bar: number}, void> {}
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------- create_factory.js:41:1

Cannot call `bFactory` because property `bar` is missing in props [1] but exists in object type [2]. [prop-missing]

   create_factory.js:41:1
   41| bFactory(); // Error: Missing `foo` and `bar`.
       ^^^^^^^^

References:
   create_factory.js:41:1
   41| bFactory(); // Error: Missing `foo` and `bar`.
       ^^^^^^^^^^ [1]
   create_factory.js:11:19
   11| function B(props: {foo: number, bar: number}) { return null }
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------- create_factory.js:41:1

Cannot call `bFactory` because property `foo` is missing in props [1] but exists in object type [2]. [prop-missing]

   create_factory.js:41:1
   41| bFactory(); // Error: Missing `foo` and `bar`.
       ^^^^^^^^

References:
   create_factory.js:41:1
   41| bFactory(); // Error: Missing `foo` and `bar`.
       ^^^^^^^^^^ [1]
   create_factory.js:11:19
   11| function B(props: {foo: number, bar: number}) { return null }
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------- create_factory.js:56:8

Cannot call `cFactory` because string [1] is incompatible with number [2] in property `bar`. [incompatible-call]

   create_factory.js:56:8
   56|   bar: 'Hello, world!', // Error: `bar` is a string.
              ^^^^^^^^^^^^^^^ [1]

References:
   create_factory.js:43:52
   43| class C extends React.Component<{foo: number, bar: number}, void> {
                                                          ^^^^^^ [2]


Error ------------------------------------------------------------------------------------------- create_factory.js:60:8

Cannot call `dFactory` because string [1] is incompatible with number [2] in property `bar`. [incompatible-call]

   create_factory.js:60:8
   60|   bar: 'Hello, world!', // Error: `bar` is a string.
              ^^^^^^^^^^^^^^^ [1]

References:
   create_factory.js:46:38
   46| function D(props: {foo: number, bar: number}) { return null }
                                            ^^^^^^ [2]


Error ------------------------------------------------------------------------------------------ create_factory.js:73:10

Cannot call `eFactory` because property `children` is missing in props [1] but exists in object type [2]. [prop-missing]

   create_factory.js:73:10
   73| eFactory({}); // Error
                ^^ [1]

References:
   create_factory.js:71:33
   71| class E extends React.Component<{children: number}, void> {}
                                       ^^^^^^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------ create_factory.js:74:10

Cannot call `eFactory` because property `children` is missing in props [1] but exists in object type [2]. [prop-missing]

   create_factory.js:74:10
   74| eFactory(undefined); // Error
                ^^^^^^^^^ [1]

References:
   create_factory.js:71:33
   71| class E extends React.Component<{children: number}, void> {}
                                       ^^^^^^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------ create_factory.js:75:10

Cannot call `eFactory` because property `children` is missing in props [1] but exists in object type [2]. [prop-missing]

   create_factory.js:75:10
   75| eFactory(null); // Error
                ^^^^ [1]

References:
   create_factory.js:71:33
   71| class E extends React.Component<{children: number}, void> {}
                                       ^^^^^^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------ create_factory.js:79:10

Cannot call `eFactory` because children array [1] is incompatible with number [2] in property `children`.
[incompatible-call]

   create_factory.js:79:10
   79| eFactory({}, 1, 2); // Error
                ^^

References:
   create_factory.js:79:1
   79| eFactory({}, 1, 2); // Error
       ^^^^^^^^^^^^^^^^^^ [1]
   create_factory.js:71:44
   71| class E extends React.Component<{children: number}, void> {}
                                                  ^^^^^^ [2]


Error ------------------------------------------------------------------------------------------ create_factory.js:80:10

Cannot call `eFactory` because children array [1] is incompatible with number [2] in property `children`.
[incompatible-call]

   create_factory.js:80:10
   80| eFactory(undefined, 1, 2); // Error
                ^^^^^^^^^

References:
   create_factory.js:80:1
   80| eFactory(undefined, 1, 2); // Error
       ^^^^^^^^^^^^^^^^^^^^^^^^^ [1]
   create_factory.js:71:44
   71| class E extends React.Component<{children: number}, void> {}
                                                  ^^^^^^ [2]


Error ------------------------------------------------------------------------------------------ create_factory.js:81:10

Cannot call `eFactory` because children array [1] is incompatible with number [2] in property `children`.
[incompatible-call]

   create_factory.js:81:10
   81| eFactory(null, 1, 2); // Error
                ^^^^

References:
   create_factory.js:81:1
   81| eFactory(null, 1, 2); // Error
       ^^^^^^^^^^^^^^^^^^^^ [1]
   create_factory.js:71:44
   71| class E extends React.Component<{children: number}, void> {}
                                                  ^^^^^^ [2]


Error ------------------------------------------------------------------------------------------ create_factory.js:82:10

Cannot call `eFactory` because children array [1] is incompatible with number [2] in property `children`.
[incompatible-call]

   create_factory.js:82:10
   82| eFactory({}, 1, 2, 3); // Error
                ^^

References:
   create_factory.js:82:1
   82| eFactory({}, 1, 2, 3); // Error
       ^^^^^^^^^^^^^^^^^^^^^ [1]
   create_factory.js:71:44
   71| class E extends React.Component<{children: number}, void> {}
                                                  ^^^^^^ [2]


Error ------------------------------------------------------------------------------------------ create_factory.js:83:10

Cannot call `eFactory` because array literal [1] is incompatible with number [2] in property `children`.
[incompatible-call]

   create_factory.js:83:10
   83| eFactory({}, [1, 2]); // Error
                ^^

References:
   create_factory.js:83:14
   83| eFactory({}, [1, 2]); // Error
                    ^^^^^^ [1]
   create_factory.js:71:44
   71| class E extends React.Component<{children: number}, void> {}
                                                  ^^^^^^ [2]


Error ------------------------------------------------------------------------------------------ create_factory.js:84:10

Cannot call `eFactory` because children array [1] is incompatible with number [2] in property `children`.
[incompatible-call]

   create_factory.js:84:10
   84| eFactory({}, [1, 2], [3, 4]); // Error
                ^^

References:
   create_factory.js:84:1
   84| eFactory({}, [1, 2], [3, 4]); // Error
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]
   create_factory.js:71:44
   71| class E extends React.Component<{children: number}, void> {}
                                                  ^^^^^^ [2]


Error ------------------------------------------------------------------------------------------ create_factory.js:85:10

Cannot call `eFactory` because property `children` is missing in props [1] but exists in object type [2]. [prop-missing]

   create_factory.js:85:10
   85| eFactory({}, ...[]); // Error
                ^^ [1]

References:
   create_factory.js:71:33
   71| class E extends React.Component<{children: number}, void> {}
                                       ^^^^^^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------ create_factory.js:87:10

Cannot call `eFactory` because children array [1] is incompatible with number [2] in property `children`.
[incompatible-call]

   create_factory.js:87:10
   87| eFactory({}, ...[1, 2]); // Error
                ^^

References:
   create_factory.js:87:1
   87| eFactory({}, ...[1, 2]); // Error
       ^^^^^^^^^^^^^^^^^^^^^^^ [1]
   create_factory.js:71:44
   71| class E extends React.Component<{children: number}, void> {}
                                                  ^^^^^^ [2]


Error ------------------------------------------------------------------------------------------ create_factory.js:88:10

Cannot call `eFactory` because children array or array [1] is incompatible with number [2] in property `children`.
[incompatible-call]

   create_factory.js:88:10
   88| eFactory({}, ...(any: Array<number>)); // Error
                ^^

References:
   create_factory.js:88:1
   88| eFactory({}, ...(any: Array<number>)); // Error
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]
   create_factory.js:71:44
   71| class E extends React.Component<{children: number}, void> {}
                                                  ^^^^^^ [2]


Error ------------------------------------------------------------------------------------------ create_factory.js:88:10

Cannot call `eFactory` because undefined [1] is incompatible with number [2] in property `children`. [incompatible-call]

   create_factory.js:88:10
   88| eFactory({}, ...(any: Array<number>)); // Error
                ^^

References:
   create_factory.js:88:1
   88| eFactory({}, ...(any: Array<number>)); // Error
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]
   create_factory.js:71:44
   71| class E extends React.Component<{children: number}, void> {}
                                                  ^^^^^^ [2]


Error ------------------------------------------------------------------------------------------ create_factory.js:90:10

Cannot call `eFactory` because children array [1] is incompatible with number [2] in property `children`.
[incompatible-call]

   create_factory.js:90:10
   90| eFactory({}, 1, ...[2]); // Error
                ^^

References:
   create_factory.js:90:1
   90| eFactory({}, 1, ...[2]); // Error
       ^^^^^^^^^^^^^^^^^^^^^^^ [1]
   create_factory.js:71:44
   71| class E extends React.Component<{children: number}, void> {}
                                                  ^^^^^^ [2]


Error ------------------------------------------------------------------------------------------ create_factory.js:91:10

Cannot call `eFactory` because children array or number [1] is incompatible with number [2] in property `children`.
[incompatible-call]

   create_factory.js:91:10
   91| eFactory({}, 1, ...(any: Array<number>)); // Error
                ^^

References:
   create_factory.js:91:1
   91| eFactory({}, 1, ...(any: Array<number>)); // Error
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]
   create_factory.js:71:44
   71| class E extends React.Component<{children: number}, void> {}
                                                  ^^^^^^ [2]


Error ------------------------------------------------------------------------------------------ create_factory.js:95:10

Cannot call `fFactory` because property `children` is missing in props [1] but exists in object type [2]. [prop-missing]

   create_factory.js:95:10
   95| fFactory({}); // Error
                ^^ [1]

References:
   create_factory.js:93:33
   93| class F extends React.Component<{children: Array<number>}, void> {}
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------ create_factory.js:96:10

Cannot call `fFactory` because property `children` is missing in props [1] but exists in object type [2]. [prop-missing]

   create_factory.js:96:10
   96| fFactory(undefined); // Error
                ^^^^^^^^^ [1]

References:
   create_factory.js:93:33
   93| class F extends React.Component<{children: Array<number>}, void> {}
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------ create_factory.js:97:10

Cannot call `fFactory` because property `children` is missing in props [1] but exists in object type [2]. [prop-missing]

   create_factory.js:97:10
   97| fFactory(null); // Error
                ^^^^ [1]

References:
   create_factory.js:93:33
   93| class F extends React.Component<{children: Array<number>}, void> {}
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------ create_factory.js:98:10

Cannot call `fFactory` because number [1] is incompatible with array type [2] in property `children`.
[incompatible-call]

   create_factory.js:98:10
   98| fFactory({}, 1); // Error
                ^^

References:
   create_factory.js:98:14
   98| fFactory({}, 1); // Error
                    ^ [1]
   create_factory.js:93:44
   93| class F extends React.Component<{children: Array<number>}, void> {}
                                                  ^^^^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------ create_factory.js:99:10

Cannot call `fFactory` because number [1] is incompatible with array type [2] in property `children`.
[incompatible-call]

   create_factory.js:99:10
   99| fFactory(undefined, 1); // Error
                ^^^^^^^^^

References:
   create_factory.js:99:21
   99| fFactory(undefined, 1); // Error
                           ^ [1]
   create_factory.js:93:44
   93| class F extends React.Component<{children: Array<number>}, void> {}
                                                  ^^^^^^^^^^^^^ [2]


Error ----------------------------------------------------------------------------------------- create_factory.js:100:10

Cannot call `fFactory` because number [1] is incompatible with array type [2] in property `children`.
[incompatible-call]

   create_factory.js:100:10
   100| fFactory(null, 1); // Error
                 ^^^^

References:
   create_factory.js:100:16
   100| fFactory(null, 1); // Error
                       ^ [1]
   create_factory.js:93:44
    93| class F extends React.Component<{children: Array<number>}, void> {}
                                                   ^^^^^^^^^^^^^ [2]


Error ----------------------------------------------------------------------------------------- create_factory.js:106:10

Cannot call `fFactory` because array literal [1] is incompatible with number [2] in array element of property
`children`. [incompatible-call]

   create_factory.js:106:10
   106| fFactory({}, [1, 2], [3, 4]); // Error
                 ^^

References:
   create_factory.js:106:14
   106| fFactory({}, [1, 2], [3, 4]); // Error
                     ^^^^^^ [1]
   create_factory.js:93:50
    93| class F extends React.Component<{children: Array<number>}, void> {}
                                                         ^^^^^^ [2]


Error ----------------------------------------------------------------------------------------- create_factory.js:106:10

Cannot call `fFactory` because array literal [1] is incompatible with number [2] in array element of property
`children`. [incompatible-call]

   create_factory.js:106:10
   106| fFactory({}, [1, 2], [3, 4]); // Error
                 ^^

References:
   create_factory.js:106:22
   106| fFactory({}, [1, 2], [3, 4]); // Error
                             ^^^^^^ [1]
   create_factory.js:93:50
    93| class F extends React.Component<{children: Array<number>}, void> {}
                                                         ^^^^^^ [2]


Error ----------------------------------------------------------------------------------------- create_factory.js:107:10

Cannot call `fFactory` because property `children` is missing in props [1] but exists in object type [2]. [prop-missing]

   create_factory.js:107:10
   107| fFactory({}, ...[]); // Error
                 ^^ [1]

References:
   create_factory.js:93:33
    93| class F extends React.Component<{children: Array<number>}, void> {}
                                        ^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error ----------------------------------------------------------------------------------------- create_factory.js:108:10

Cannot call `fFactory` because number [1] is incompatible with array type [2] in property `children`.
[incompatible-call]

   create_factory.js:108:10
   108| fFactory({}, ...[1]); // Error
                 ^^

References:
   create_factory.js:108:18
   108| fFactory({}, ...[1]); // Error
                         ^ [1]
   create_factory.js:93:44
    93| class F extends React.Component<{children: Array<number>}, void> {}
                                                   ^^^^^^^^^^^^^ [2]


Error ----------------------------------------------------------------------------------------- create_factory.js:110:10

Cannot call `fFactory` because number [1] is incompatible with array type [2] in property `children`.
[incompatible-call]

   create_factory.js:110:10
   110| fFactory({}, ...(any: Array<number>)); // Error
                 ^^

References:
   create_factory.js:93:50
    93| class F extends React.Component<{children: Array<number>}, void> {}
                                                         ^^^^^^ [1]
   create_factory.js:93:44
    93| class F extends React.Component<{children: Array<number>}, void> {}
                                                   ^^^^^^^^^^^^^ [2]


Error ----------------------------------------------------------------------------------------- create_factory.js:110:10

Cannot call `fFactory` because undefined [1] is incompatible with array type [2] in property `children`.
[incompatible-call]

   create_factory.js:110:10
   110| fFactory({}, ...(any: Array<number>)); // Error
                 ^^

References:
   create_factory.js:110:1
   110| fFactory({}, ...(any: Array<number>)); // Error
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]
   create_factory.js:93:44
    93| class F extends React.Component<{children: Array<number>}, void> {}
                                                   ^^^^^^^^^^^^^ [2]


Error ----------------------------------------------------------------------------------------- create_factory.js:110:10

Cannot call `fFactory` because number [1] is incompatible with array type [2] in property `children`.
[incompatible-call]

   create_factory.js:110:10
   110| fFactory({}, ...(any: Array<number>)); // Error
                 ^^

References:
   create_factory.js:110:29
   110| fFactory({}, ...(any: Array<number>)); // Error
                                    ^^^^^^ [1]
   create_factory.js:93:44
    93| class F extends React.Component<{children: Array<number>}, void> {}
                                                   ^^^^^^^^^^^^^ [2]


Error ----------------------------------------------------------------------------------------- create_factory.js:111:10

Cannot call `fFactory` because number [1] is incompatible with array type [2] in property `children`.
[incompatible-call]

   create_factory.js:111:10
   111| fFactory({}, 1, ...[]); // Error
                 ^^

References:
   create_factory.js:111:14
   111| fFactory({}, 1, ...[]); // Error
                     ^ [1]
   create_factory.js:93:44
    93| class F extends React.Component<{children: Array<number>}, void> {}
                                                   ^^^^^^^^^^^^^ [2]


Error ----------------------------------------------------------------------------------------- create_factory.js:113:10

Cannot call `fFactory` because number [1] is incompatible with array type [2] in property `children`.
[incompatible-call]

   create_factory.js:113:10
   113| fFactory({}, 1, ...(any: Array<number>)); // Error
                 ^^

References:
   create_factory.js:113:14
   113| fFactory({}, 1, ...(any: Array<number>)); // Error
                     ^ [1]
   create_factory.js:93:44
    93| class F extends React.Component<{children: Array<number>}, void> {}
                                                   ^^^^^^^^^^^^^ [2]


Error ----------------------------------------------------------------------------------------- create_factory.js:117:10

Cannot call `gFactory` because property `children` is missing in props [1] but exists in object type [2]. [prop-missing]

   create_factory.js:117:10
   117| gFactory({}); // Error
                 ^^ [1]

References:
   create_factory.js:115:33
   115| class G extends React.Component<{children: number | Array<number>}, void> {}
                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error ----------------------------------------------------------------------------------------- create_factory.js:122:10

Cannot call `gFactory` because in property `children`: [incompatible-call]
 - Either array literal [1] is incompatible with number [2] in array element.
 - Or children array [3] is incompatible with number [4].

   create_factory.js:122:10
   122| gFactory({}, [1, 2], [3, 4]); // Error
                 ^^

References:
   create_factory.js:122:14
   122| gFactory({}, [1, 2], [3, 4]); // Error
                     ^^^^^^ [1]
   create_factory.js:115:59
   115| class G extends React.Component<{children: number | Array<number>}, void> {}
                                                                  ^^^^^^ [2]
   create_factory.js:122:1
   122| gFactory({}, [1, 2], [3, 4]); // Error
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [3]
   create_factory.js:115:44
   115| class G extends React.Component<{children: number | Array<number>}, void> {}
                                                   ^^^^^^ [4]


Error ----------------------------------------------------------------------------------------- create_factory.js:123:10

Cannot call `gFactory` because property `children` is missing in props [1] but exists in object type [2]. [prop-missing]

   create_factory.js:123:10
   123| gFactory({}, ...[]); // Error
                 ^^ [1]

References:
   create_factory.js:115:33
   115| class G extends React.Component<{children: number | Array<number>}, void> {}
                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error ----------------------------------------------------------------------------------------- create_factory.js:126:10

Cannot call `gFactory` because in property `children`: [incompatible-call]
 - Either undefined [1] is incompatible with number [2].
 - Or undefined [1] is incompatible with array type [3].

   create_factory.js:126:10
   126| gFactory({}, ...(any: Array<number>)); // Error
                 ^^

References:
   create_factory.js:126:1
   126| gFactory({}, ...(any: Array<number>)); // Error
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]
   create_factory.js:115:44
   115| class G extends React.Component<{children: number | Array<number>}, void> {}
                                                   ^^^^^^ [2]
   create_factory.js:115:53
   115| class G extends React.Component<{children: number | Array<number>}, void> {}
                                                            ^^^^^^^^^^^^^ [3]


Error ----------------------------------------------------------------------------------------- create_factory.js:134:10

Cannot call `hFactory` because property `children` is missing in props [1] but exists in object type [2]. [prop-missing]

   create_factory.js:134:10
   134| hFactory({}); // Error
                 ^^ [1]

References:
   create_factory.js:132:33
   132| class H extends React.Component<{children: NumberArrayRecursive}, void> {}
                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error ----------------------------------------------------------------------------------------- create_factory.js:140:10

Cannot call `hFactory` because property `children` is missing in props [1] but exists in object type [2]. [prop-missing]

   create_factory.js:140:10
   140| hFactory({}, ...[]); // Error
                 ^^ [1]

References:
   create_factory.js:132:33
   132| class H extends React.Component<{children: NumberArrayRecursive}, void> {}
                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [2]


Error ----------------------------------------------------------------------------------------- create_factory.js:143:10

Cannot call `hFactory` because in property `children`: [incompatible-call]
 - Either undefined [1] is incompatible with number [2].
 - Or undefined [1] is incompatible with array type [3].

   create_factory.js:143:10
   143| hFactory({}, ...(any: Array<number>)); // Error
                 ^^

References:
   create_factory.js:143:1
   143| hFactory({}, ...(any: Array<number>)); // Error
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]
   create_factory.js:131:29
   131| type NumberArrayRecursive = number | Array<NumberArrayRecursive>;
                                    ^^^^^^ [2]
   create_factory.js:131:38
   131| type NumberArrayRecursive = number | Array<NumberArrayRecursive>;
                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^ [3]


Error ----------------------------------------------------------------------------------------- create_factory.js:152:10

Cannot call `iFactory` because null [1] is incompatible with number [2] in property `children`. [incompatible-call]

   create_factory.js:152:10
   152| iFactory({}, null); // Error
                 ^^

References:
   create_factory.js:152:14
   152| iFactory({}, null); // Error
                     ^^^^ [1]
   create_factory.js:148:45
   148| class I extends React.Component<{children?: number}, void> {}
                                                    ^^^^^^ [2]


Error ----------------------------------------------------------------------------------------- create_factory.js:154:10

Cannot call `iFactory` because children array [1] is incompatible with number [2] in property `children`.
[incompatible-call]

   create_factory.js:154:10
   154| iFactory({}, 1, 2); // Error
                 ^^

References:
   create_factory.js:154:1
   154| iFactory({}, 1, 2); // Error
        ^^^^^^^^^^^^^^^^^^ [1]
   create_factory.js:148:45
   148| class I extends React.Component<{children?: number}, void> {}
                                                    ^^^^^^ [2]


Error ----------------------------------------------------------------------------------------- create_factory.js:157:10

Cannot call `iFactory` because children array [1] is incompatible with number [2] in property `children`.
[incompatible-call]

   create_factory.js:157:10
   157| iFactory({}, ...[1, 2]); // Error
                 ^^

References:
   create_factory.js:157:1
   157| iFactory({}, ...[1, 2]); // Error
        ^^^^^^^^^^^^^^^^^^^^^^^ [1]
   create_factory.js:148:45
   148| class I extends React.Component<{children?: number}, void> {}
                                                    ^^^^^^ [2]


Error ----------------------------------------------------------------------------------------- create_factory.js:158:10

Cannot call `iFactory` because children array or array [1] is incompatible with number [2] in property `children`.
[incompatible-call]

   create_factory.js:158:10
   158| iFactory({}, ...(any: Array<number>)); // Error
                 ^^

References:
   create_factory.js:158:1
   158| iFactory({}, ...(any: Array<number>)); // Error
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]
   create_factory.js:148:45
   148| class I extends React.Component<{children?: number}, void> {}
                                                    ^^^^^^ [2]


Error ----------------------------------------------------------------------------------------- create_factory.js:160:10

Cannot call `iFactory` because children array [1] is incompatible with number [2] in property `children`.
[incompatible-call]

   create_factory.js:160:10
   160| iFactory({}, 1, ...[2]); // Error
                 ^^

References:
   create_factory.js:160:1
   160| iFactory({}, 1, ...[2]); // Error
        ^^^^^^^^^^^^^^^^^^^^^^^ [1]
   create_factory.js:148:45
   148| class I extends React.Component<{children?: number}, void> {}
                                                    ^^^^^^ [2]


Error ----------------------------------------------------------------------------------------- create_factory.js:161:10

Cannot call `iFactory` because children array or number [1] is incompatible with number [2] in property `children`.
[incompatible-call]

   create_factory.js:161:10
   161| iFactory({}, 1, ...(any: Array<number>)); // Error
                 ^^

References:
   create_factory.js:161:1
   161| iFactory({}, 1, ...(any: Array<number>)); // Error
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]
   create_factory.js:148:45
   148| class I extends React.Component<{children?: number}, void> {}
                                                    ^^^^^^ [2]


Error ----------------------------------------------------------------------------------------- create_factory.js:165:10

Cannot call `jFactory` because property `children` is missing in props [1] but exists in object type [2]. [prop-missing]

   create_factory.js:165:10
   165| jFactory({}); // Error
                 ^^ [1]

References:
   create_factory.js:163:33
   163| class J extends React.Component<{children: ?number}, void> {}
                                        ^^^^^^^^^^^^^^^^^^^ [2]


Error ----------------------------------------------------------------------------------------- create_factory.js:169:10

Cannot call `jFactory` because children array [1] is incompatible with number [2] in property `children`.
[incompatible-call]

   create_factory.js:169:10
   169| jFactory({}, 1, 2); // Error
                 ^^

References:
   create_factory.js:169:1
   169| jFactory({}, 1, 2); // Error
        ^^^^^^^^^^^^^^^^^^ [1]
   create_factory.js:163:45
   163| class J extends React.Component<{children: ?number}, void> {}
                                                    ^^^^^^ [2]


Error ----------------------------------------------------------------------------------------- create_factory.js:170:10

Cannot call `jFactory` because property `children` is missing in props [1] but exists in object type [2]. [prop-missing]

   create_factory.js:170:10
   170| jFactory({}, ...[]); // Error
                 ^^ [1]

References:
   create_factory.js:163:33
   163| class J extends React.Component<{children: ?number}, void> {}
                                        ^^^^^^^^^^^^^^^^^^^ [2]


Error ----------------------------------------------------------------------------------------- create_factory.js:172:10

Cannot call `jFactory` because children array [1] is incompatible with number [2] in property `children`.
[incompatible-call]

   create_factory.js:172:10
   172| jFactory({}, ...[1, 2]); // Error
                 ^^

References:
   create_factory.js:172:1
   172| jFactory({}, ...[1, 2]); // Error
        ^^^^^^^^^^^^^^^^^^^^^^^ [1]
   create_factory.js:163:45
   163| class J extends React.Component<{children: ?number}, void> {}
                                                    ^^^^^^ [2]


Error ----------------------------------------------------------------------------------------- create_factory.js:173:10

Cannot call `jFactory` because children array or array [1] is incompatible with number [2] in property `children`.
[incompatible-call]

   create_factory.js:173:10
   173| jFactory({}, ...(any: Array<number>)); // Error
                 ^^

References:
   create_factory.js:173:1
   173| jFactory({}, ...(any: Array<number>)); // Error
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]
   create_factory.js:163:45
   163| class J extends React.Component<{children: ?number}, void> {}
                                                    ^^^^^^ [2]


Error ----------------------------------------------------------------------------------------- create_factory.js:175:10

Cannot call `jFactory` because children array [1] is incompatible with number [2] in property `children`.
[incompatible-call]

   create_factory.js:175:10
   175| jFactory({}, 1, ...[2]); // Error
                 ^^

References:
   create_factory.js:175:1
   175| jFactory({}, 1, ...[2]); // Error
        ^^^^^^^^^^^^^^^^^^^^^^^ [1]
   create_factory.js:163:45
   163| class J extends React.Component<{children: ?number}, void> {}
                                                    ^^^^^^ [2]


Error ----------------------------------------------------------------------------------------- create_factory.js:176:10

Cannot call `jFactory` because children array or number [1] is incompatible with number [2] in property `children`.
[incompatible-call]

   create_factory.js:176:10
   176| jFactory({}, 1, ...(any: Array<number>)); // Error
                 ^^

References:
   create_factory.js:176:1
   176| jFactory({}, 1, ...(any: Array<number>)); // Error
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ [1]
   create_factory.js:163:45
   163| class J extends React.Component<{children: ?number}, void> {}
                                                    ^^^^^^ [2]


Error ----------------------------------------------------------------------------------------- create_factory.js:183:10

Cannot call `kFactory` because string [1] is incompatible with number [2] in property `children`. [incompatible-call]

   create_factory.js:183:10
   183| kFactory({}, '42'); // Error
                 ^^

References:
   create_factory.js:183:14
   183| kFactory({}, '42'); // Error
                     ^^^^ [1]
   create_factory.js:178:44
   178| class K extends React.Component<{children: number}, void> {}
                                                   ^^^^^^ [2]


Error ----------------------------------------------------------------------------------------- create_factory.js:184:21

Cannot call `kFactory` because string [1] is incompatible with number [2] in property `children`. [incompatible-call]

   create_factory.js:184:21
   184| kFactory({children: '42'}); // Error
                            ^^^^ [1]

References:
   create_factory.js:178:44
   178| class K extends React.Component<{children: number}, void> {}
                                                   ^^^^^^ [2]


Error ----------------------------------------------------------------------------------------- create_factory.js:186:10

Cannot call `kFactory` because string [1] is incompatible with number [2] in property `children`. [incompatible-call]

   create_factory.js:186:10
   186| kFactory({children: 42}, '42'); // Error
                 ^^^^^^^^^^^^^^

References:
   create_factory.js:186:26
   186| kFactory({children: 42}, '42'); // Error
                                 ^^^^ [1]
   create_factory.js:178:44
   178| class K extends React.Component<{children: number}, void> {}
                                                   ^^^^^^ [2]


Error ----------------------------------------------------------------------------------------- create_factory.js:187:10

Cannot call `kFactory` because string [1] is incompatible with number [2] in property `children`. [incompatible-call]

   create_factory.js:187:10
   187| kFactory({children: '42'}, '42'); // Error
                 ^^^^^^^^^^^^^^^^

References:
   create_factory.js:187:28
   187| kFactory({children: '42'}, '42'); // Error
                                   ^^^^ [1]
   create_factory.js:178:44
   178| class K extends React.Component<{children: number}, void> {}
                                                   ^^^^^^ [2]


Error ----------------------------------------------------------------------------------------- create_factory.js:201:10

Cannot call `lFactory` because property `foo` is missing in props [1] but exists in object type [2]. [prop-missing]

   create_factory.js:201:10
   201| lFactory({}, 1); // Error
                 ^^ [1]

References:
   create_factory.js:189:33
                                        v
   189| class L extends React.Component<{
   190|   foo: number,
   191|   bar: number,
   192|   children: number,
   193| }, void> {
        ^ [2]


Error ----------------------------------------------------------------------------------------- create_factory.js:202:10

Cannot call `lFactory` because property `foo` is missing in props [1] but exists in object type [2]. [prop-missing]

   create_factory.js:202:10
   202| lFactory({children: 1}); // Error
                 ^^^^^^^^^^^^^ [1]

References:
   create_factory.js:189:33
                                        v
   189| class L extends React.Component<{
   190|   foo: number,
   191|   bar: number,
   192|   children: number,
   193| }, void> {
        ^ [2]


Error ----------------------------------------------------------------------------------------- create_factory.js:203:10

Cannot call `lFactory` because property `foo` is missing in props [1] but exists in object type [2]. [prop-missing]

   create_factory.js:203:10
   203| lFactory({bar: 1}, 2); // Error
                 ^^^^^^^^ [1]

References:
   create_factory.js:189:33
                                        v
   189| class L extends React.Component<{
   190|   foo: number,
   191|   bar: number,
   192|   children: number,
   193| }, void> {
        ^ [2]


Error ----------------------------------------------------------------------------------------- create_factory.js:204:10

Cannot call `lFactory` because property `foo` is missing in props [1] but exists in object type [2]. [prop-missing]

   create_factory.js:204:10
   204| lFactory({bar: 1, children: 2}); // Error
                 ^^^^^^^^^^^^^^^^^^^^^ [1]

References:
   create_factory.js:189:33
                                        v
   189| class L extends React.Component<{
   190|   foo: number,
   191|   bar: number,
   192|   children: number,
   193| }, void> {
        ^ [2]


Error ----------------------------------------------------------------------------------------- create_factory.js:205:16

Cannot call `lFactory` because string [1] is incompatible with number [2] in property `foo`. [incompatible-call]

   create_factory.js:205:16
   205| lFactory({foo: '1', bar: 2}, 3); // Error
                       ^^^ [1]

References:
   create_factory.js:190:8
   190|   foo: number,
               ^^^^^^ [2]


Error ----------------------------------------------------------------------------------------- create_factory.js:206:16

Cannot call `lFactory` because string [1] is incompatible with number [2] in property `foo`. [incompatible-call]

   create_factory.js:206:16
   206| lFactory({foo: '1', bar: 2, children: 3}); // Error
                       ^^^ [1]

References:
   create_factory.js:190:8
   190|   foo: number,
               ^^^^^^ [2]


Error ----------------------------------------------------------------------------------------- create_factory.js:207:24

Cannot call `lFactory` because string [1] is incompatible with number [2] in property `bar`. [incompatible-call]

   create_factory.js:207:24
   207| lFactory({foo: 1, bar: '2'}, 3); // Error
                               ^^^ [1]

References:
   create_factory.js:191:8
   191|   bar: number,
               ^^^^^^ [2]


Error ----------------------------------------------------------------------------------------- create_factory.js:208:24

Cannot call `lFactory` because string [1] is incompatible with number [2] in property `bar`. [incompatible-call]

   create_factory.js:208:24
   208| lFactory({foo: 1, bar: '2', children: 3}); // Error
                               ^^^ [1]

References:
   create_factory.js:191:8
   191|   bar: number,
               ^^^^^^ [2]


Error ----------------------------------------------------------------------------------------- create_factory.js:209:10

Cannot call `lFactory` because string [1] is incompatible with number [2] in property `children`. [incompatible-call]

   create_factory.js:209:10
   209| lFactory({foo: 1, bar: 2}, '3'); // Error
                 ^^^^^^^^^^^^^^^^

References:
   create_factory.js:209:28
   209| lFactory({foo: 1, bar: 2}, '3'); // Error
                                   ^^^ [1]
   create_factory.js:192:13
   192|   children: number,
                    ^^^^^^ [2]


Error ----------------------------------------------------------------------------------------- create_factory.js:210:37

Cannot call `lFactory` because string [1] is incompatible with number [2] in property `children`. [incompatible-call]

   create_factory.js:210:37
   210| lFactory({foo: 1, bar: 2, children: '3'}); // Error
                                            ^^^ [1]

References:
   create_factory.js:192:13
   192|   children: number,
                    ^^^^^^ [2]


Error ------------------------------------------------------------------------------------------ create_factory.js:216:2

Cannot cast `mFactory().type` to `typeof N` because `M` [1] is incompatible with `N` [2]. [incompatible-cast]

   create_factory.js:216:2
   216| (mFactory().type: typeof N); // Error
         ^^^^^^^^^^^^^^^

References:
   create_factory.js:212:7
   212| class M extends React.Component<{}> {}
              ^ [1]
   create_factory.js:213:7
   213| class N extends React.Component<{}> {}
              ^ [2]



Found 218 errors

Only showing the most relevant union/intersection branches.
To see all branches, re-run Flow with --show-all-branches
